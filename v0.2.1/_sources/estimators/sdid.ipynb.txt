{
 "cells": [
  {
   "cell_type": "raw",
   "id": "79fb3587-82b2-4f74-95c2-92d667641565",
   "metadata": {
    "papermill": {
     "duration": 0.001447,
     "end_time": "2023-12-08T20:52:23.824026",
     "exception": false,
     "start_time": "2023-12-08T20:52:23.822579",
     "status": "completed"
    },
    "raw_mimetype": "text/restructuredtext",
    "tags": []
   },
   "source": [
    ".. _sdid:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3cdccaa",
   "metadata": {
    "papermill": {
     "duration": 0.000906,
     "end_time": "2023-12-08T20:52:23.826109",
     "exception": false,
     "start_time": "2023-12-08T20:52:23.825203",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Synthetic Difference-in-Difference (SDID)"
   ]
  },
  {
   "cell_type": "raw",
   "id": "b4cfb911-757d-4c31-a909-4cd56a3bd054",
   "metadata": {
    "papermill": {
     "duration": 0.000894,
     "end_time": "2023-12-08T20:52:23.828047",
     "exception": false,
     "start_time": "2023-12-08T20:52:23.827153",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The implementation is a clone of the R code published along with the paper (https://synth-inference.github.io/synthdid/). Except precision issues, the results should be identical. Please find more details in :cite:p:`sdid`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "17473824-2d0d-4fa0-8009-f294cb384e49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:52:23.830889Z",
     "iopub.status.busy": "2023-12-08T20:52:23.830543Z",
     "iopub.status.idle": "2023-12-08T20:52:25.587883Z",
     "shell.execute_reply": "2023-12-08T20:52:25.587265Z"
    },
    "papermill": {
     "duration": 1.760063,
     "end_time": "2023-12-08T20:52:25.589036",
     "exception": false,
     "start_time": "2023-12-08T20:52:23.828973",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "╭──────────────────────────────────────────────────────────────────────────────╮\n",
      "|                               CaliforniaProp99                               |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                    Panel                                     |\n",
      "|  Time Periods: 31 (19/12)                                  total (pre/post)  |\n",
      "|  Units: 39 (38/1)                                       total (contr/treat)  |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                     ATT                                      |\n",
      "|  Effect (±SE): -15.60 (±2.9161)                                              |\n",
      "|  Confidence Interval (95%): [-21.32 , -9.8884]                          (-)  |\n",
      "|  Observed: 60.35                                                             |\n",
      "|  Counter Factual: 75.95                                                      |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                  Percentage                                  |\n",
      "|  Effect (±SE): -20.54 (±3.8393)                                              |\n",
      "|  Confidence Interval (95%): [-28.07 , -13.02]                           (-)  |\n",
      "|  Observed: 79.46                                                             |\n",
      "|  Counter Factual: 100.00                                                     |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                  Cumulative                                  |\n",
      "|  Effect (±SE): -187.25 (±34.99)                                              |\n",
      "|  Confidence Interval (95%): [-255.83 , -118.66]                         (-)  |\n",
      "|  Observed: 724.20                                                            |\n",
      "|  Counter Factual: 911.45                                                     |\n",
      "╰──────────────────────────────────────────────────────────────────────────────╯\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from azcausal.data import CaliforniaProp99\n",
    "from azcausal.core.error import JackKnife\n",
    "from azcausal.estimators.panel.sdid import SDID\n",
    "\n",
    "\n",
    "# load an example data set with the columns Year, State, PacksPerCapita, treated.\n",
    "panel = CaliforniaProp99().panel()\n",
    "\n",
    "# initialize an estimator object, here synthetic difference in difference (sdid)\n",
    "estimator = SDID()\n",
    "\n",
    "# run the estimator\n",
    "result = estimator.fit(panel)\n",
    "\n",
    "# show the results in a plot\n",
    "estimator.plot(result, CF=True, C=True, show=False)\n",
    "\n",
    "# run an error validation method\n",
    "estimator.error(result, JackKnife())\n",
    "\n",
    "# print out information about the estimate\n",
    "print(result.summary(title=\"CaliforniaProp99\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a4b3e89c-8ab2-4ec7-9fe6-ed46d1f6833f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:52:25.593510Z",
     "iopub.status.busy": "2023-12-08T20:52:25.593160Z",
     "iopub.status.idle": "2023-12-08T20:52:25.598153Z",
     "shell.execute_reply": "2023-12-08T20:52:25.597603Z"
    },
    "papermill": {
     "duration": 0.008363,
     "end_time": "2023-12-08T20:52:25.599251",
     "exception": false,
     "start_time": "2023-12-08T20:52:25.590888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Nevada           0.124489\n",
       "New Hampshire    0.105048\n",
       "Connecticut      0.078287\n",
       "Delaware         0.070368\n",
       "Colorado         0.057513\n",
       "Illinois         0.053388\n",
       "Nebraska         0.047853\n",
       "Montana          0.045135\n",
       "Utah             0.041518\n",
       "New Mexico       0.040568\n",
       "Name: omega, dtype: float64"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# the weights of control units to create synthetic control\n",
    "result.effect['omega'].sort_values(ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e41a21f1-3443-49b3-a3b7-b2e1b27c1954",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:52:25.603444Z",
     "iopub.status.busy": "2023-12-08T20:52:25.603129Z",
     "iopub.status.idle": "2023-12-08T20:52:25.607870Z",
     "shell.execute_reply": "2023-12-08T20:52:25.607303Z"
    },
    "papermill": {
     "duration": 0.00813,
     "end_time": "2023-12-08T20:52:25.609027",
     "exception": false,
     "start_time": "2023-12-08T20:52:25.600897",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1988    0.427076\n",
       "1986    0.366471\n",
       "1987    0.206453\n",
       "1980    0.000000\n",
       "1985    0.000000\n",
       "Name: lambd, dtype: float64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# the weights of each time-step for weighted DID\n",
    "result.effect['lambd'].sort_values(ascending=False).head(5)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2.873654,
   "end_time": "2023-12-08T20:52:25.926522",
   "environment_variables": {},
   "exception": null,
   "input_path": "/home/runner/work/azcausal/azcausal/docs/source/estimators/sdid.ipynb",
   "output_path": "/home/runner/work/azcausal/azcausal/docs/source/estimators/sdid.ipynb",
   "parameters": {},
   "start_time": "2023-12-08T20:52:23.052868",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}