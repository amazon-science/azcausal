{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "401d28a6",
   "metadata": {
    "papermill": {
     "duration": 0.001548,
     "end_time": "2023-12-08T20:51:14.166296",
     "exception": false,
     "start_time": "2023-12-08T20:51:14.164748",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Error"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecd6c81b-e305-4cd9-acfa-61d9b12ee252",
   "metadata": {
    "papermill": {
     "duration": 0.001441,
     "end_time": "2023-12-08T20:51:14.169201",
     "exception": false,
     "start_time": "2023-12-08T20:51:14.167760",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Out of the books different ways of measearing the estimation error of an estimator are supported."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7d1fa6c3-ed94-4b8c-9309-64628e60be42",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:14.172879Z",
     "iopub.status.busy": "2023-12-08T20:51:14.172545Z",
     "iopub.status.idle": "2023-12-08T20:51:15.134578Z",
     "shell.execute_reply": "2023-12-08T20:51:15.133976Z"
    },
    "papermill": {
     "duration": 0.965361,
     "end_time": "2023-12-08T20:51:15.135903",
     "exception": false,
     "start_time": "2023-12-08T20:51:14.170542",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "╭──────────────────────────────────────────────────────────────────────────────╮\n",
      "|                                    Panel                                     |\n",
      "|  Time Periods: 31 (19/12)                                  total (pre/post)  |\n",
      "|  Units: 39 (38/1)                                       total (contr/treat)  |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                     ATT                                      |\n",
      "|  Effect: -27.35                                                              |\n",
      "|  Observed: 60.35                                                             |\n",
      "|  Counter Factual: 87.70                                                      |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                  Cumulative                                  |\n",
      "|  Effect: -328.19                                                             |\n",
      "|  Observed: 724.20                                                            |\n",
      "|  Counter Factual: 1,052.39                                                   |\n",
      "╰──────────────────────────────────────────────────────────────────────────────╯\n"
     ]
    }
   ],
   "source": [
    "from azcausal.core.parallelize import Joblib\n",
    "from azcausal.data import CaliforniaProp99\n",
    "from azcausal.estimators.panel.did import DID\n",
    "\n",
    "panel = CaliforniaProp99().panel()\n",
    "\n",
    "# initialize an estimator object, here difference in difference (did)\n",
    "estimator = DID()\n",
    "\n",
    "# run the estimator\n",
    "result = estimator.fit(panel)\n",
    "\n",
    "print(result.summary(percentage=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "81c05cad-4416-4b8e-ac60-c8e6519ad804",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:15.140482Z",
     "iopub.status.busy": "2023-12-08T20:51:15.140056Z",
     "iopub.status.idle": "2023-12-08T20:51:15.143931Z",
     "shell.execute_reply": "2023-12-08T20:51:15.143429Z"
    },
    "papermill": {
     "duration": 0.007294,
     "end_time": "2023-12-08T20:51:15.145088",
     "exception": false,
     "start_time": "2023-12-08T20:51:15.137794",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "def plot_error_distribution(runs):\n",
    "\n",
    "    plt.subplots(1, 1, figsize=(12,2))\n",
    "    x = np.array([result.effect.value for result in runs])\n",
    "    plt.hist(x, bins=31, color='blue')\n",
    "    plt.axvline(x.mean(), color='red')\n",
    "\n",
    "    return x.mean(), x.std()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0575219",
   "metadata": {
    "papermill": {
     "duration": 0.001359,
     "end_time": "2023-12-08T20:51:15.147863",
     "exception": false,
     "start_time": "2023-12-08T20:51:15.146504",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Bootstrap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "56f037b9-e389-4604-b703-f802664e4584",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:15.151669Z",
     "iopub.status.busy": "2023-12-08T20:51:15.151224Z",
     "iopub.status.idle": "2023-12-08T20:51:17.858695Z",
     "shell.execute_reply": "2023-12-08T20:51:17.858069Z"
    },
    "papermill": {
     "duration": 2.710732,
     "end_time": "2023-12-08T20:51:17.859992",
     "exception": false,
     "start_time": "2023-12-08T20:51:15.149260",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "╭──────────────────────────────────────────────────────────────────────────────╮\n",
      "|                                    Panel                                     |\n",
      "|  Time Periods: 31 (19/12)                                  total (pre/post)  |\n",
      "|  Units: 39 (38/1)                                       total (contr/treat)  |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                     ATT                                      |\n",
      "|  Effect (±SE): -27.35 (±2.7923)                                              |\n",
      "|  Confidence Interval (95%): [-32.82 , -21.88]                           (-)  |\n",
      "|  Observed: 60.35                                                             |\n",
      "|  Counter Factual: 87.70                                                      |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                  Cumulative                                  |\n",
      "|  Effect (±SE): -328.19 (±33.51)                                              |\n",
      "|  Confidence Interval (95%): [-393.86 , -262.52]                         (-)  |\n",
      "|  Observed: 724.20                                                            |\n",
      "|  Counter Factual: 1,052.39                                                   |\n",
      "╰──────────────────────────────────────────────────────────────────────────────╯\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(-27.279344861963246, 2.792262747797979)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from azcausal.core.error import Bootstrap\n",
    "\n",
    "method = Bootstrap(n_samples=500)\n",
    "se, runs = method.run(result)\n",
    "\n",
    "# print out information about the estimate\n",
    "print(result.summary(percentage=False))\n",
    "\n",
    "plot_error_distribution(runs)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c78d751",
   "metadata": {
    "papermill": {
     "duration": 0.001957,
     "end_time": "2023-12-08T20:51:17.864118",
     "exception": false,
     "start_time": "2023-12-08T20:51:17.862161",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Placebo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "178819ae-c528-4d81-8d4c-0eaef7538f76",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:17.868799Z",
     "iopub.status.busy": "2023-12-08T20:51:17.868567Z",
     "iopub.status.idle": "2023-12-08T20:51:20.335204Z",
     "shell.execute_reply": "2023-12-08T20:51:20.334566Z"
    },
    "papermill": {
     "duration": 2.470872,
     "end_time": "2023-12-08T20:51:20.336762",
     "exception": false,
     "start_time": "2023-12-08T20:51:17.865890",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "╭──────────────────────────────────────────────────────────────────────────────╮\n",
      "|                                    Panel                                     |\n",
      "|  Time Periods: 31 (19/12)                                  total (pre/post)  |\n",
      "|  Units: 39 (38/1)                                       total (contr/treat)  |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                     ATT                                      |\n",
      "|  Effect (±SE): -27.35 (±18.17)                                               |\n",
      "|  Confidence Interval (95%): [-62.97 , 8.2711]                         (+/-)  |\n",
      "|  Observed: 60.35                                                             |\n",
      "|  Counter Factual: 87.70                                                      |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                  Cumulative                                  |\n",
      "|  Effect (±SE): -328.19 (±218.09)                                             |\n",
      "|  Confidence Interval (95%): [-755.63 , 99.25]                         (+/-)  |\n",
      "|  Observed: 724.20                                                            |\n",
      "|  Counter Factual: 1,052.39                                                   |\n",
      "╰──────────────────────────────────────────────────────────────────────────────╯\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(-0.8596241879653584, 18.17388989586121)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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2jX8Ifr999+PPXv2RGlpab/20tLS2LZt21796+rqYvXq1ZnbfX198cEHH8TMmTMjLy8v2+UdFD5/FeRgmY2HbDDuGYuMe8YaY56xyLg/OCRJErt27YrZs/f/ImDWQ/RAFRYWRmFhYb+2adOm5aaYEaaoqMgTjTHHuGcsMu4Za4x5xiLjfuTb3wz057K+sNihhx4ahxxySLS1tfVrb2tri7KysmyfDgAAAIZN1kN0QUFBLFiwIBoaGjJtfX190dDQEJWVldk+HQAAAAybIXk79+rVq+Oiiy6KhQsXximnnBK33357dHV1xSWXXDIUpxt1CgsLY+3atXu9zR1GM+Oesci4Z6wx5hmLjPvRZ0gucRURceedd8att94ara2tcdJJJ8W6deuioqJiKE4FAAAAw2LIQjQAAACMNln/TDQAAACMVkI0AAAApCREAwAAQEpCNAAAAKQkRI9Af/jDH6KioiImTpwY06dPj6VLl/bbv3379jj33HNj0qRJUVJSEj/84Q/j008/zU2xkEXd3d1x0kknRV5eXrz66qv99v3lL3+Jr3zlKzFhwoQoLy+PW265JTdFQha8/fbbsWzZspg7d25MnDgxvvCFL8TatWujp6enXz/jntHmrrvuiqOOOiomTJgQFRUV8dJLL+W6JMiK+vr6WLRoUUydOjVKSkpi6dKl0dzc3K/P7t27o7a2NmbOnBlTpkyJmpqaaGtry1HFHAgheoT57W9/GxdeeGFccskl8dprr8Xzzz8f3/72tzP79+zZE+eee2709PTECy+8EA899FA8+OCDcd111+WwasiOq666KmbPnr1Xe2dnZyxZsiSOPPLI2Lx5c9x6661x/fXXx/3335+DKuHAbdu2Lfr6+uK+++6L119/PW677ba4995740c/+lGmj3HPaPPII4/E6tWrY+3atbFly5Y48cQTo7q6Onbu3Jnr0uCANTY2Rm1tbWzatCmefvrp6O3tjSVLlkRXV1emz6pVq+Kxxx6LjRs3RmNjY7S0tMR5552Xw6oZtIQRo7e3Nzn88MOTX/7yl/9nnyeeeCLJz89PWltbM2333HNPUlRUlHR3dw9HmTAknnjiiWTevHnJ66+/nkRE8uc//zmz7+67706mT5/eb4xfffXVybHHHpuDSmFo3HLLLcncuXMzt417RptTTjklqa2tzdzes2dPMnv27KS+vj6HVcHQ2LlzZxIRSWNjY5IkSdLe3p6MHz8+2bhxY6bP3/72tyQikqamplyVySCZiR5BtmzZEu+++27k5+fHySefHIcddlicc845sXXr1kyfpqamOOGEE6K0tDTTVl1dHZ2dnfH666/nomw4YG1tbXHppZfGr3/965g0adJe+5uamuKMM86IgoKCTFt1dXU0NzfHhx9+OJylwpDp6OiIGTNmZG4b94wmPT09sXnz5qiqqsq05efnR1VVVTQ1NeWwMhgaHR0dERGZ3+ubN2+O3t7efs+BefPmxZw5czwHDkJC9Ajy5ptvRkTE9ddfHz/+8Y/j8ccfj+nTp8eZZ54ZH3zwQUREtLa29gvQEZG53draOrwFQxYkSRIXX3xxXH755bFw4cJ99jHuGe3++c9/xh133BHf/e53M23GPaPJ+++/H3v27NnnmDaeGW36+vpi5cqVsXjx4pg/f35EfPZ7u6CgIKZNm9avr+fAwUmIHgbXXHNN5OXl/c/t88/HRURce+21UVNTEwsWLIj169dHXl5ebNy4McePAgYm7bi/4447YteuXVFXV5frkuGApR33/+ndd9+Nr33ta3H++efHpZdemqPKAciW2tra2Lp1a2zYsCHXpTBExuW6gLFgzZo1cfHFF//PPkcffXS89957ERFx/PHHZ9oLCwvj6KOPju3bt0dERFlZ2V4rWX6+ql9ZWVkWq4YDk3bcP/PMM9HU1BSFhYX99i1cuDAuuOCCeOihh6KsrGyv1SuNe0aitOP+cy0tLXHWWWfFaaedtteCYcY9o8mhhx4ahxxyyD7HtPHMaLJ8+fJ4/PHH47nnnosjjjgi015WVhY9PT3R3t7ebzbac+DgJEQPg1mzZsWsWbP222/BggVRWFgYzc3Ncfrpp0dERG9vb7z99ttx5JFHRkREZWVl/OxnP4udO3dGSUlJREQ8/fTTUVRU1C98Q66lHffr1q2LG2+8MXO7paUlqqur45FHHomKioqI+GzcX3vttdHb2xvjx4+PiM/G/bHHHhvTp08fmgcAg5B23Ed8NgN91llnZd51lJ/f/81hxj2jSUFBQSxYsCAaGhoyl+7s6+uLhoaGWL58eW6LgyxIkiRWrFgRjz76aDz77LMxd+7cfvsXLFgQ48ePj4aGhqipqYmIiObm5ti+fXtUVlbmomQORK5XNqO/K6+8Mjn88MOTp556Ktm2bVuybNmypKSkJPnggw+SJEmSTz/9NJk/f36yZMmS5NVXX02efPLJZNasWUldXV2OK4fseOutt/Zanbu9vT0pLS1NLrzwwmTr1q3Jhg0bkkmTJiX33Xdf7gqFA/DOO+8kX/ziF5Ozzz47eeedd5L33nsvs33OuGe02bBhQ1JYWJg8+OCDyRtvvJFcdtllybRp0/pdcQQOVldccUVSXFycPPvss/1+p3/88ceZPpdffnkyZ86c5JlnnkleeeWVpLKyMqmsrMxh1QyWED3C9PT0JGvWrElKSkqSqVOnJlVVVcnWrVv79Xn77beTc845J5k4cWJy6KGHJmvWrEl6e3tzVDFk175CdJIkyWuvvZacfvrpSWFhYXL44YcnN998c24KhCxYv359EhH73P6Tcc9oc8cddyRz5sxJCgoKklNOOSXZtGlTrkuCrPi/fqevX78+0+eTTz5Jvve97yXTp09PJk2alHz961/v9+IpB4+8JEmSXMyAAwAAwMHG6twAAACQkhANAAAAKQnRAAAAkJIQDQAAACkJ0QAAAJCSEA0AAAApCdEAAACQkhANAAAAKQnRAAAAkJIQDQAAACkJ0QAAAJDS/wPpFwsr8phGTQAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1200x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from azcausal.core.error import Placebo\n",
    "\n",
    "method = Placebo(n_samples=500)\n",
    "se, runs = method.run(result)\n",
    "\n",
    "# print out information about the estimate\n",
    "print(result.summary(percentage=False))\n",
    "\n",
    "plot_error_distribution(runs)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5952186b",
   "metadata": {
    "papermill": {
     "duration": 0.002213,
     "end_time": "2023-12-08T20:51:20.342618",
     "exception": false,
     "start_time": "2023-12-08T20:51:20.340405",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### JackKnife"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d69bb968-8991-49e3-ad49-112933eddee6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:20.349574Z",
     "iopub.status.busy": "2023-12-08T20:51:20.348969Z",
     "iopub.status.idle": "2023-12-08T20:51:20.597496Z",
     "shell.execute_reply": "2023-12-08T20:51:20.596856Z"
    },
    "papermill": {
     "duration": 0.254249,
     "end_time": "2023-12-08T20:51:20.598933",
     "exception": false,
     "start_time": "2023-12-08T20:51:20.344684",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "╭──────────────────────────────────────────────────────────────────────────────╮\n",
      "|                                    Panel                                     |\n",
      "|  Time Periods: 31 (19/12)                                  total (pre/post)  |\n",
      "|  Units: 39 (38/1)                                       total (contr/treat)  |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                     ATT                                      |\n",
      "|  Effect (±SE): -27.35 (±2.7671)                                              |\n",
      "|  Confidence Interval (95%): [-32.77 , -21.93]                           (-)  |\n",
      "|  Observed: 60.35                                                             |\n",
      "|  Counter Factual: 87.70                                                      |\n",
      "├──────────────────────────────────────────────────────────────────────────────┤\n",
      "|                                  Cumulative                                  |\n",
      "|  Effect (±SE): -328.19 (±33.21)                                              |\n",
      "|  Confidence Interval (95%): [-393.27 , -263.11]                         (-)  |\n",
      "|  Observed: 724.20                                                            |\n",
      "|  Counter Factual: 1,052.39                                                   |\n",
      "╰──────────────────────────────────────────────────────────────────────────────╯\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(-27.34911108361494, 0.45491579154542355)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA8gAAADFCAYAAACIJNtBAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8g+/7EAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAUaElEQVR4nO3de4xU9d0/8PcCssDKLoqLStkHsVqrwQsFBGLaaCBiq7EXNamh0RBDtUVpxVbFVK02BVtrNGJLrY3YtN4TSUlbtIR6iREphZKoFS8tVm4r1ssu4uMqu+f3R3/u48p1cGcWdl+v5CQ73z2Xz3f5zJl5MzNnqoqiKAIAAAA9XK+uLgAAAAD2BgIyAAAAREAGAACAJAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEiS9Kn0Adva2rJhw4YMHDgwVVVVlT48AAAAPUxRFNm8eXOGDh2aXr12/DpxxQPyhg0b0tDQUOnDAgAA0MOtXbs2w4YN2+HvKx6QBw4cmOS/hdXW1lb68AAAlMOWLcnQof/9ecOGpKama+sB+Ijm5uY0NDS059EdqXhA/vBt1bW1tQIyAEB30bv3//1cWysgA3ulXX3M10W6AAAAIHsQkNevX59vfOMbGTx4cPr3759jjz02f/vb38pRGwAAAFRMSW+xfuutt3LSSSfllFNOyaJFi1JfX5+XXnopBxxwQLnqAwAAgIooKSD/5Cc/SUNDQ+bPn98+NmLEiE4vCgAAACqtpLdYL1y4MGPGjMk555yTIUOGZNSoUbnjjjt2uk1LS0uam5s7LAAAALC3KSkg/+tf/8q8efNy5JFH5pFHHsm3vvWtzJgxI7/5zW92uM2cOXNSV1fXvvgOZAAAupuqqsouQHlUFUVR7O7Kffv2zZgxY/LUU0+1j82YMSPLly/P0qVLt7tNS0tLWlpa2m9/+P1TTU1NvuYJAKC72LIl2X////78zjs97mueKh1ad/8ZPJD8N4fW1dXtMoeW9AryoYcemmOOOabD2NFHH51XX311h9tUV1e3f+ex7z4GAABgb1VSQD7ppJPywgsvdBh78cUXM3z48E4tCgAAACqtpIB86aWX5umnn87s2bPz8ssv55577smvfvWrTJ8+vVz1AQAAQEWUFJDHjh2bBQsW5N57783IkSPzox/9KLfcckumTJlSrvoAAACgIkq6SFdn2N0PRwMAsA9xka6KcpEuKE1ZLtIFAAAA3ZWADAAAABGQAQAAIImADAAAAEkEZAAAAEgiIAMAAEASARkAAACSCMgAAACQREAGAACAJAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEgiIAMAAEASARkAAACSCMgAAACQREAGAACAJAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEgiIAMAAEASARkAAACSCMgAAACQREAGAACAJAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEgiIAMAAEASARkAAACSCMgAAACQREAGAACAJAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEgiIAMAAECSTxiQb7jhhlRVVeW73/1uJ5UDAAAAXWOPA/Ly5ctz++2357jjjuvMegAAAKBL7FFAfueddzJlypTccccdOeCAAzq7JgAAAKi4PQrI06dPz+mnn55Jkybtct2WlpY0Nzd3WAAAAGBv06fUDe67776sXLkyy5cv363158yZk+uuu67kwgAAeqqqqq6uoHQDkmz5/z/X7J+8u4P1iqJCBQHsgZJeQV67dm2+853v5O67706/fv12a5tZs2alqampfVm7du0eFQoAAADlVNIryCtWrMimTZvyuc99rn2stbU1TzzxRG677ba0tLSkd+/eHbaprq5OdXV151QLAAAAZVJSQJ44cWKeeeaZDmNTp07NZz/72VxxxRXbhGMAAADYV5QUkAcOHJiRI0d2GKupqcngwYO3GQcAAIB9yR5/DzIAAAB0JyVfxfrjHnvssU4oAwAAALqWV5ABAAAgAjIAAAAkEZABAAAgiYAMAAAASQRkAAAASCIgAwAAQBIBGQAAAJIIyAAAAJBEQAYAAIAkAjIAAAAkEZABAAAgiYAMAAAASQRkAAAASCIgAwAAQBIBGQAAAJIIyAAAAJBEQAYAAIAkSZ+uLgAA6F6qqip3rKKo3LHoHPqjc/g7Qnl4BRkAAAAiIAMAAEASARkAAACSCMgAAACQREAGAACAJAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEgiIAMAAEASARkAAACSCMgAAACQREAGAACAJAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEgiIAMAAEASARkAAACSCMgAAACQpMSAPGfOnIwdOzYDBw7MkCFD8pWvfCUvvPBCuWoDAACAiikpID/++OOZPn16nn766SxevDgffPBBTj311GzZsqVc9QEAAEBF9Cll5YcffrjD7bvuuitDhgzJihUr8oUvfGG727S0tKSlpaX9dnNz8x6UCQAAAOX1iT6D3NTUlCQ58MADd7jOnDlzUldX1740NDR8kkMCALSrqqrcApRfJe/Tlb5fd9d5dTdVRVEUe7JhW1tbzjzzzLz99tt58sknd7je9l5BbmhoSFNTU2pra/fk0ADAXqy7Pjnbs2dMe2Zf/BsOyJZsyf5Jkpq8k3dT08UV+TfrLN3579hd51bJee0rmpubU1dXt8scWtJbrD9q+vTpefbZZ3cajpOkuro61dXVe3oYAAAAqIg9CsgXX3xx/vCHP+SJJ57IsGHDOrsmAAAAqLiSAnJRFLnkkkuyYMGCPPbYYxkxYkS56gIAAICKKikgT58+Pffcc09+//vfZ+DAgWlsbEyS1NXVpX///mUpEAAAACqhpKtYz5s3L01NTTn55JNz6KGHti/3339/ueoDAACAiij5LdYAAADQHX2i70EGAACA7kJABgAAgAjIAAAAkERABgAAgCQCMgAAACQRkAEAACCJgAwAAABJBGQAAABIIiADAABAEgEZAAAAkgjIAAAAkERABgAAgCQCMgAAACQRkAEAACCJgAwAAABJBGQAAABIIiADAABAkqRPVxewN6uqqtyxiqJyx4K9SSXvZ5Xmfs3OeIzZ93Tn81V35d+sc3Tnv2N3nZvHmD3nFWQAAACIgAwAAABJBGQAAABIIiADAABAEgEZAAAAkgjIAAAAkERABgAAgCQCMgAAACQRkAEAACCJgAwAAABJBGQAAABIIiADAABAEgEZAAAAkgjIAAAAkERABgAAgCQCMgAAACQRkAEAACCJgAwAAABJBGQAAABIIiADAABAkj0MyD//+c9z2GGHpV+/fhk3blz++te/dnZdAAAAUFElB+T7778/M2fOzLXXXpuVK1fm+OOPz+TJk7Np06Zy1AcAAAAVUVUURVHKBuPGjcvYsWNz2223JUna2trS0NCQSy65JFdeeeU267e0tKSlpaX9dlNTU/7nf/4na9euTW1t7Scsv7zq6ip3rKamyh0L9iaVvJ9Vmvs1O9OdH2O68/2aHeufLWnM0CTJIdmQ/01NF1cEVMK+8nynubk5DQ0Nefvtt1O3kweqPqXs9P3338+KFSsya9as9rFevXpl0qRJWbp06Xa3mTNnTq677rptxhsaGko5dLfnyQR0P+7X7C30IpXwv0n+r9WGdl0hQEXta48xmzdv7ryA/J///Cetra05+OCDO4wffPDBWb169Xa3mTVrVmbOnNl+u62tLW+++WYGDx6cqqqqUg5fdh/+r8K+8Oo27Ip+pjvRz3Qn+pnuRD+zryiKIps3b87QoTv/D7ySAvKeqK6uTnV1dYexQYMGlfuwn0htba07ON2GfqY70c90J/qZ7kQ/sy/Y2SvHHyrpIl0HHXRQevfunddee63D+GuvvZZDDjmktOoAAABgL1JSQO7bt29Gjx6dJUuWtI+1tbVlyZIlmTBhQqcXBwAAAJVS8lusZ86cmfPPPz9jxozJiSeemFtuuSVbtmzJ1KlTy1FfRVVXV+faa6/d5i3hsC/Sz3Qn+pnuRD/TnehnupuSv+YpSW677bbceOONaWxszAknnJBbb70148aNK0d9AAAAUBF7FJABAACguynpM8gAAADQXQnIAAAAEAEZAAAAkgjIAAAAkKQHBeRXXnklF1xwQUaMGJH+/fvn05/+dK699tq8//77HdZ74IEHcsIJJ2TAgAEZPnx4brzxxl3u+80338yUKVNSW1ubQYMG5YILLsg777xTrqnAbvfzI488kvHjx2fgwIGpr6/PWWedlVdeeWWn+z7ssMNSVVXVYbnhhhvKOBt6unL2s/MzXWF3evqHP/zhNufaqqqq1NTU7HTf29vmvvvuK/eU6MHK2c+vvvpqTj/99AwYMCBDhgzJ97///WzdurXcU4KdKvl7kPdVq1evTltbW26//fYcccQRefbZZzNt2rRs2bIlP/vZz5IkixYtypQpUzJ37tyceuqpef755zNt2rT0798/F1988Q73PWXKlGzcuDGLFy/OBx98kKlTp+ab3/xm7rnnnkpNjx5md/p5zZo1+fKXv5yZM2fm7rvvTlNTUy699NJ87Wtfy8qVK3e6/+uvvz7Tpk1rvz1w4MCyzoeerZz97PxMV9idnv7e976Xiy66qMN2EydOzNixY3e5//nz5+e0005rvz1o0KBOrR8+qlz93NramtNPPz2HHHJInnrqqWzcuDHnnXde9ttvv8yePbusc4KdKnqwn/70p8WIESPab5977rnF2Wef3WGdW2+9tRg2bFjR1ta23X384x//KJIUy5cvbx9btGhRUVVVVaxfv748hcN2fLyfH3zwwaJPnz5Fa2tr+9jChQuLqqqq4v3339/hfoYPH17cfPPN5SwVdqkz+tn5mb3Jx3v641atWlUkKZ544omd7idJsWDBgk6uDkrTGf38pz/9qejVq1fR2NjYPjZv3ryitra2aGlp6dR6oRQ95i3W29PU1JQDDzyw/XZLS0v69evXYZ3+/ftn3bp1+fe//73dfSxdujSDBg3KmDFj2scmTZqUXr16ZdmyZeUpHLbj4/08evTo9OrVK/Pnz09ra2uampry29/+NpMmTcp+++23033dcMMNGTx4cEaNGpUbb7zR252ouM7oZ+dn9iYf7+mP+/Wvf53PfOYz+fznP7/LfU2fPj0HHXRQTjzxxNx5550piqIzS4Vd6ox+Xrp0aY499tgcfPDB7WOTJ09Oc3NznnvuuU6tF0rRYwPyyy+/nLlz5+bCCy9sH5s8eXIeeuihLFmyJG1tbXnxxRdz0003JUk2bty43f00NjZmyJAhHcb69OmTAw88MI2NjeWbAHzE9vp5xIgR+fOf/5yrrroq1dXVGTRoUNatW5cHHnhgp/uaMWNG7rvvvjz66KO58MILM3v27Fx++eXlngK066x+dn5mb7G9nv6o9957L3fffXcuuOCCXe7r+uuvzwMPPJDFixfnrLPOyre//e3MnTu3s0uGHeqsfm5sbOwQjpO033aOpivt8wH5yiuv3O5FAT66rF69usM269evz2mnnZZzzjmnw+csp02blosvvjhnnHFG+vbtm/Hjx+frX/96kqRXr33+T8U+oDP7ubGxMdOmTcv555+f5cuX5/HHH0/fvn1z9tln7/TVhpkzZ+bkk0/Occcdl4suuig33XRT5s6dm5aWlrLNm+5pb+hn6Eyd2dMftWDBgmzevDnnn3/+Lmu4+uqrc9JJJ2XUqFG54oorcvnll+/WBUXh4/aGfoa9UVWxjz+zeP311/PGG2/sdJ3DDz88ffv2TZJs2LAhJ598csaPH5+77rpru8G3tbU1jY2Nqa+vz5IlS/KlL30pmzZtSn19/Tbr3nnnnbnsssvy1ltvtY9t3bo1/fr1y4MPPpivfvWrn3CG9CSd2c9XX311Hn744Sxfvrx9bN26dWloaMjSpUszfvz43arpueeey8iRI7N69eocddRRezAreqqu7mfnZzpbOZ5zJP+9mFFtbW0WLFhQck1//OMfc8YZZ+S9995LdXV1ydvTc3V1P19zzTVZuHBhVq1a1T62Zs2aHH744Vm5cmVGjRpV2oSgk+zzV7Gur6/fbnDdnvXr1+eUU07J6NGjM3/+/B3esXv37p1PfepTSZJ77703EyZM2OExJkyYkLfffjsrVqzI6NGjkyR/+ctf0tbWlnHjxu3BjOjJOrOf33333W3GevfunSRpa2vb7ZpWrVqVXr16bfNWVdiVru5n52c6Wzmec6xZsyaPPvpoFi5cuEc1rVq1KgcccIBwTMm6up8nTJiQH//4x9m0aVP7c4zFixentrY2xxxzzO5PBDpbl14irILWrVtXHHHEEcXEiROLdevWFRs3bmxfPvT6668X8+bNK55//vni73//ezFjxoyiX79+xbJly9rXWbZsWXHUUUcV69atax877bTTilGjRhXLli0rnnzyyeLII48szj333IrOj55ld/p5yZIlRVVVVXHdddcVL774YrFixYpi8uTJxfDhw4t33323KIpt+/mpp54qbr755mLVqlXFP//5z+J3v/tdUV9fX5x33nldMk96hnL1c1E4P9M1dqenP/SDH/ygGDp0aLF169ZtfvfQQw8VRx11VPvthQsXFnfccUfxzDPPFC+99FLxi1/8ohgwYEBxzTXXlHU+9Gzl6uetW7cWI0eOLE499dRi1apVxcMPP1zU19cXs2bNKut8YFd6TECeP39+kWS7y4def/31Yvz48UVNTU0xYMCAYuLEicXTTz/dYT+PPvpokaRYs2ZN+9gbb7xRnHvuucX+++9f1NbWFlOnTi02b95cqanRA+1OPxdFUdx7773FqFGjipqamqK+vr4488wzi+eff7799x/v5xUrVhTjxo0r6urqin79+hVHH310MXv27OK9996r5PToYcrVz0Xh/EzX2N2ebm1tLYYNG1ZcddVVO93PhxYtWlSccMIJxf7771/U1NQUxx9/fPHLX/6yw9efQWcrVz8XRVG88sorxRe/+MWif//+xUEHHVRcdtllxQcffFC2ucDu2Oc/gwwAAACdwaWZAQAAIAIyAAAAJBGQAQAAIImADAAAAEkEZAAAAEgiIAMAAEASARkAAACSCMgAAACQREAGAACAJAIyAAAAJBGQAQAAIEny/wCeSRgsozscKQAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1200x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from azcausal.core.error import JackKnife\n",
    "\n",
    "method = JackKnife()\n",
    "se, runs = method.run(result)\n",
    "\n",
    "# print out information about the estimate\n",
    "print(result.summary(percentage=False))\n",
    "\n",
    "plot_error_distribution(runs)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.509221,
   "end_time": "2023-12-08T20:51:20.918767",
   "environment_variables": {},
   "exception": null,
   "input_path": "/home/runner/work/azcausal/azcausal/docs/source/error.ipynb",
   "output_path": "/home/runner/work/azcausal/azcausal/docs/source/error.ipynb",
   "parameters": {},
   "start_time": "2023-12-08T20:51:13.409546",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}