{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0b81fa87",
   "metadata": {
    "papermill": {
     "duration": 0.00221,
     "end_time": "2023-12-08T20:51:21.511316",
     "exception": false,
     "start_time": "2023-12-08T20:51:21.509106",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Statistical Power"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e83129df-20c1-419f-b629-f6c546af7ebd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:21.516505Z",
     "iopub.status.busy": "2023-12-08T20:51:21.516279Z",
     "iopub.status.idle": "2023-12-08T20:51:22.315258Z",
     "shell.execute_reply": "2023-12-08T20:51:22.314706Z"
    },
    "papermill": {
     "duration": 0.803343,
     "end_time": "2023-12-08T20:51:22.316751",
     "exception": false,
     "start_time": "2023-12-08T20:51:21.513408",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from numpy.random import RandomState\n",
    "\n",
    "from azcausal.core.panel import CausalPanel\n",
    "from azcausal.core.effect import get_true_effect\n",
    "from azcausal.core.error import JackKnife\n",
    "from azcausal.core.parallelize import Joblib\n",
    "from azcausal.data import CaliforniaProp99\n",
    "from azcausal.estimators.panel.did import DID\n",
    "from azcausal.util import zeros_like\n",
    "from azcausal.util.analysis import f_power"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "265b7226-ad95-4d5b-b734-4d286f9afef1",
   "metadata": {
    "papermill": {
     "duration": 0.00216,
     "end_time": "2023-12-08T20:51:22.321160",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.319000",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "First, let us load the data you want to analyze the power on. Make sure that no units are already treated in this data set at anytime."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d1c4ef24-e3b2-4737-82bc-3fc844db214b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:22.326113Z",
     "iopub.status.busy": "2023-12-08T20:51:22.325702Z",
     "iopub.status.idle": "2023-12-08T20:51:22.339880Z",
     "shell.execute_reply": "2023-12-08T20:51:22.339377Z"
    },
    "papermill": {
     "duration": 0.018068,
     "end_time": "2023-12-08T20:51:22.341130",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.323062",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "╭──────────────────────────────────────────────────────────────────────────────╮\n",
      "|                                    Panel                                     |\n",
      "|  Time Periods: 31 (31/0)                                   total (pre/post)  |\n",
      "|  Units: 38 (38/0)                                       total (contr/treat)  |\n",
      "╰──────────────────────────────────────────────────────────────────────────────╯\n"
     ]
    }
   ],
   "source": [
    "panel = CaliforniaProp99().panel().filter(contr=True)\n",
    "\n",
    "print(panel.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2165a21-4c68-42fe-a404-33bc98bfee54",
   "metadata": {
    "papermill": {
     "duration": 0.002151,
     "end_time": "2023-12-08T20:51:22.345533",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.343382",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Next, we define a function which will create a sample of our original panel and add some treatment. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e121ad99-e837-417b-adbf-0ece86a0d7e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:22.350824Z",
     "iopub.status.busy": "2023-12-08T20:51:22.350429Z",
     "iopub.status.idle": "2023-12-08T20:51:22.356223Z",
     "shell.execute_reply": "2023-12-08T20:51:22.355704Z"
    },
    "papermill": {
     "duration": 0.009823,
     "end_time": "2023-12-08T20:51:22.357419",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.347596",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "class Function:\n",
    "\n",
    "    def __init__(self, panel, att, seed) -> None:\n",
    "        super().__init__()\n",
    "        self.panel = panel\n",
    "        self.att = att\n",
    "        self.seed = seed\n",
    "\n",
    "    def __call__(self, *args, **kwargs):\n",
    "        panel = self.panel\n",
    "            \n",
    "        # parameters\n",
    "        seed = self.seed\n",
    "        att = self.att\n",
    "\n",
    "        # constants\n",
    "        conf = 90\n",
    "        n_treat = 5\n",
    "        n_post = 12\n",
    "\n",
    "        # random seed for reproducibility\n",
    "        random_state = RandomState(seed)\n",
    "\n",
    "        # define what is treated and when\n",
    "        treat_units = random_state.choice(np.arange(panel.n_units()), replace=False, size=n_treat)\n",
    "\n",
    "        intervention = zeros_like(panel.intervention)\n",
    "        intervention.iloc[-n_post:, treat_units] = 1\n",
    "\n",
    "        te = panel.outcome * intervention * (att / 100)\n",
    "        outcome = panel.outcome + te\n",
    "\n",
    "        # create the new panel with the new intervention\n",
    "        panel = CausalPanel(data=dict(intervention=intervention, te=te, outcome=outcome)).setup()\n",
    "\n",
    "        # use the estimator to get the effect\n",
    "        true_effect = get_true_effect(panel)\n",
    "\n",
    "        # run the estimator to get the predicted effect\n",
    "        estimator = DID()\n",
    "        result = estimator.fit(panel)\n",
    "        estimator.error(result, JackKnife())\n",
    "        pred_effect = result.effect\n",
    "\n",
    "        # create an output dictionary of what is true and what we have measured\n",
    "        res = dict(**pred_effect.to_dict(prefix='pred_', conf=conf), **true_effect.to_dict(prefix='true_', conf=conf))\n",
    "        res.update(dict(att=att, seed=seed))\n",
    "\n",
    "        return res\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f53d8e56-fbca-4b7e-8f30-76f90d28d929",
   "metadata": {
    "papermill": {
     "duration": 0.002203,
     "end_time": "2023-12-08T20:51:22.362206",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.360003",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Power"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "115f277e-ba41-478d-bf5d-18e373c6fbcd",
   "metadata": {
    "papermill": {
     "duration": 0.002244,
     "end_time": "2023-12-08T20:51:22.366635",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.364391",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Then, we create a generator which creates the runs. For each iteration we initialize the `Function`, we have defined above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3ef1eb68-b0f8-4ccd-a6f5-7ccf18b1e7c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:22.372125Z",
     "iopub.status.busy": "2023-12-08T20:51:22.371678Z",
     "iopub.status.idle": "2023-12-08T20:51:22.374736Z",
     "shell.execute_reply": "2023-12-08T20:51:22.374204Z"
    },
    "papermill": {
     "duration": 0.007125,
     "end_time": "2023-12-08T20:51:22.375936",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.368811",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "# the number of samples used for measuring power\n",
    "n_samples = 100\n",
    "\n",
    "# create all runs for this analysis (this can potentially include more dimensions as well)\n",
    "def g_power():\n",
    "    for seed in range(n_samples):\n",
    "        yield panel, -20, seed"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b009a740-b9cd-47ac-be9f-f80a5ef2d26d",
   "metadata": {
    "papermill": {
     "duration": 0.002286,
     "end_time": "2023-12-08T20:51:22.380439",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.378153",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Because running this sequentially is usually pretty slow, we make use of the `Parallelize` interface in *azcausal* to speed things up."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d9d2b34f-17a2-4751-a681-08ed90f74bf4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:22.385893Z",
     "iopub.status.busy": "2023-12-08T20:51:22.385532Z",
     "iopub.status.idle": "2023-12-08T20:51:27.215811Z",
     "shell.execute_reply": "2023-12-08T20:51:27.215153Z"
    },
    "papermill": {
     "duration": 4.834493,
     "end_time": "2023-12-08T20:51:27.217132",
     "exception": false,
     "start_time": "2023-12-08T20:51:22.382639",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  0%|          | 0/100 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  1%|          | 1/100 [00:01<02:14,  1.36s/it]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  9%|▉         | 9/100 [00:01<00:11,  8.13it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 14%|█▍        | 14/100 [00:01<00:07, 11.89it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 18%|█▊        | 18/100 [00:01<00:05, 15.15it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 22%|██▏       | 22/100 [00:01<00:04, 17.80it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 26%|██▌       | 26/100 [00:02<00:03, 18.60it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 30%|███       | 30/100 [00:02<00:03, 21.40it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 33%|███▎      | 33/100 [00:02<00:03, 22.02it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 37%|███▋      | 37/100 [00:02<00:02, 24.47it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 41%|████      | 41/100 [00:02<00:02, 25.98it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 44%|████▍     | 44/100 [00:02<00:02, 25.54it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 48%|████▊     | 48/100 [00:02<00:01, 27.37it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 51%|█████     | 51/100 [00:03<00:01, 26.46it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 55%|█████▌    | 55/100 [00:03<00:01, 27.50it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 58%|█████▊    | 58/100 [00:03<00:01, 26.66it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 62%|██████▏   | 62/100 [00:03<00:01, 28.16it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 66%|██████▌   | 66/100 [00:03<00:01, 29.10it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 69%|██████▉   | 69/100 [00:03<00:01, 27.50it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 72%|███████▏  | 72/100 [00:03<00:01, 26.45it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 76%|███████▌  | 76/100 [00:03<00:00, 25.90it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 79%|███████▉  | 79/100 [00:04<00:00, 26.60it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 83%|████████▎ | 83/100 [00:04<00:00, 27.61it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 86%|████████▌ | 86/100 [00:04<00:00, 26.73it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 90%|█████████ | 90/100 [00:04<00:00, 27.67it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 94%|█████████▍| 94/100 [00:04<00:00, 29.09it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 97%|█████████▋| 97/100 [00:04<00:00, 23.06it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "100%|██████████| 100/100 [00:04<00:00, 21.04it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parallelize = Joblib(prefer='processes', progress=True)\n",
    "results = parallelize.run([Function(*args) for args in g_power()])\n",
    "\n",
    "len(results)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1587bf4b-8a45-4bb0-a04a-b538bf73b0dd",
   "metadata": {
    "papermill": {
     "duration": 0.003343,
     "end_time": "2023-12-08T20:51:27.224263",
     "exception": false,
     "start_time": "2023-12-08T20:51:27.220920",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "And then we can analyze the resulting power and also coverage of the confidence intervals."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "14ba7cc2-271e-4911-a2ae-3bffd5154123",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:27.232105Z",
     "iopub.status.busy": "2023-12-08T20:51:27.231696Z",
     "iopub.status.idle": "2023-12-08T20:51:27.242313Z",
     "shell.execute_reply": "2023-12-08T20:51:27.241844Z"
    },
    "papermill": {
     "duration": 0.015867,
     "end_time": "2023-12-08T20:51:27.243451",
     "exception": false,
     "start_time": "2023-12-08T20:51:27.227584",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Power\n",
      "(+) 0.00%\n",
      "(+/-) 5.00%\n",
      "(-) 95.00%\n",
      "\n",
      "Coverage: 89.0%\n",
      "Average TE RMSE: 7.986427459857413\n",
      "Relative TE RMSE: 0.05869881281193749\n"
     ]
    }
   ],
   "source": [
    "dx = (pd.DataFrame(results)\n",
    "      .assign(true_in_ci=lambda dd: dd['true_avg_te'].between(dd['pred_avg_ci_lb'], dd['pred_avg_ci_ub']))\n",
    "      .assign(avg_te_error=lambda dd: dd['true_avg_te'] - dd['pred_avg_te'])\n",
    "      .assign(rel_te_error=lambda dd: dd['true_rel_te'] - dd['pred_rel_te'])\n",
    "      )\n",
    "\n",
    "# get the power from the results\n",
    "power = f_power(dx.assign(sign=lambda dd: dd['pred_sign']))\n",
    "\n",
    "print(\"Power\")\n",
    "print(f\"(+) {power['+']:.2%}\")\n",
    "print(f\"(+/-) {power['+/-']:.2%}\")\n",
    "print(f\"(-) {power['-']:.2%}\")\n",
    "\n",
    "print()\n",
    "\n",
    "coverage = dx['true_in_ci'].mean()\n",
    "print(f\"Coverage: {coverage:.1%}\")\n",
    "\n",
    "avg_te_rmse = np.sqrt((dx['avg_te_error'] ** 2).mean())\n",
    "print(f\"Average TE RMSE: {avg_te_rmse}\")\n",
    "\n",
    "rel_te_rmse = np.sqrt((dx['rel_te_error'] ** 2).mean())\n",
    "print(f\"Relative TE RMSE: {rel_te_rmse}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7211ea8f-2599-46ba-8f09-7ac4fc6933cd",
   "metadata": {
    "papermill": {
     "duration": 0.003352,
     "end_time": "2023-12-08T20:51:27.250188",
     "exception": false,
     "start_time": "2023-12-08T20:51:27.246836",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Power Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9d36a8d-69fa-453e-8e46-608c58512611",
   "metadata": {
    "papermill": {
     "duration": 0.00333,
     "end_time": "2023-12-08T20:51:27.256835",
     "exception": false,
     "start_time": "2023-12-08T20:51:27.253505",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We estimate our statistical power to be around 95% given the setup above. In addition, we might want to be a little more systematic and answer the question of how much power does a specific ATT parameter have (this can be extended to any parameter such as number of treatment regions or post time periods)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7739e53e-92fa-4cbc-90ab-80cc47542388",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:51:27.264594Z",
     "iopub.status.busy": "2023-12-08T20:51:27.264200Z",
     "iopub.status.idle": "2023-12-08T20:52:13.133460Z",
     "shell.execute_reply": "2023-12-08T20:52:13.132832Z"
    },
    "papermill": {
     "duration": 45.874487,
     "end_time": "2023-12-08T20:52:13.134722",
     "exception": false,
     "start_time": "2023-12-08T20:51:27.260235",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  0%|          | 0/1300 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  0%|          | 1/1300 [00:00<02:50,  7.63it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  0%|          | 5/1300 [00:00<00:58, 22.00it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  1%|          | 9/1300 [00:00<01:10, 18.42it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  1%|          | 15/1300 [00:00<00:46, 27.73it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  1%|▏         | 19/1300 [00:00<00:50, 25.32it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  2%|▏         | 25/1300 [00:01<00:50, 25.04it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  2%|▏         | 31/1300 [00:01<00:44, 28.43it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  3%|▎         | 34/1300 [00:01<00:47, 26.92it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  3%|▎         | 39/1300 [00:01<00:49, 25.62it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  3%|▎         | 45/1300 [00:01<00:42, 29.83it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  4%|▍         | 49/1300 [00:01<00:42, 29.30it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  4%|▍         | 53/1300 [00:02<00:49, 25.30it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  5%|▍         | 59/1300 [00:02<00:39, 31.26it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  5%|▍         | 63/1300 [00:02<00:43, 28.68it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  5%|▌         | 67/1300 [00:02<00:49, 24.69it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  6%|▌         | 75/1300 [00:02<00:44, 27.24it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  6%|▌         | 81/1300 [00:02<00:38, 31.67it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  7%|▋         | 85/1300 [00:03<00:40, 30.11it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  7%|▋         | 89/1300 [00:03<00:47, 25.71it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  7%|▋         | 97/1300 [00:03<00:43, 27.87it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  8%|▊         | 103/1300 [00:03<00:39, 30.63it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  8%|▊         | 107/1300 [00:03<00:37, 31.90it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  9%|▊         | 111/1300 [00:04<00:45, 26.03it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  9%|▉         | 117/1300 [00:04<00:38, 30.46it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "  9%|▉         | 121/1300 [00:04<00:37, 31.52it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 10%|▉         | 125/1300 [00:04<00:45, 25.77it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 10%|▉         | 129/1300 [00:04<00:43, 26.76it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 10%|█         | 133/1300 [00:04<00:41, 28.15it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 11%|█         | 137/1300 [00:04<00:40, 28.65it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 11%|█         | 141/1300 [00:05<00:38, 29.72it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 11%|█         | 145/1300 [00:05<00:36, 31.90it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 11%|█▏        | 149/1300 [00:05<00:39, 29.27it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 12%|█▏        | 153/1300 [00:05<00:48, 23.74it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 12%|█▏        | 161/1300 [00:05<00:42, 26.49it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 13%|█▎        | 167/1300 [00:06<00:47, 24.05it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 13%|█▎        | 175/1300 [00:06<00:40, 27.46it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 14%|█▍        | 181/1300 [00:06<00:34, 32.38it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 14%|█▍        | 185/1300 [00:06<00:37, 29.67it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 15%|█▍        | 189/1300 [00:06<00:43, 25.57it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 15%|█▌        | 197/1300 [00:07<00:39, 28.08it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 16%|█▌        | 203/1300 [00:07<00:34, 31.63it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 16%|█▌        | 207/1300 [00:07<00:36, 29.71it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 16%|█▌        | 211/1300 [00:07<00:41, 26.39it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 17%|█▋        | 217/1300 [00:07<00:33, 32.43it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 17%|█▋        | 221/1300 [00:07<00:38, 28.26it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 17%|█▋        | 225/1300 [00:08<00:42, 25.33it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 18%|█▊        | 233/1300 [00:08<00:38, 27.91it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 18%|█▊        | 239/1300 [00:08<00:33, 31.66it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 19%|█▊        | 243/1300 [00:08<00:36, 28.65it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 19%|█▉        | 247/1300 [00:08<00:39, 26.41it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 19%|█▉        | 253/1300 [00:08<00:32, 32.46it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 20%|█▉        | 257/1300 [00:09<00:38, 26.90it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 20%|██        | 261/1300 [00:09<00:40, 25.70it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 21%|██        | 267/1300 [00:09<00:34, 29.85it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 21%|██        | 271/1300 [00:09<00:38, 26.82it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 21%|██        | 275/1300 [00:09<00:40, 25.59it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 22%|██▏       | 281/1300 [00:10<00:31, 32.07it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 22%|██▏       | 285/1300 [00:10<00:38, 26.21it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 22%|██▏       | 289/1300 [00:10<00:39, 25.73it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 23%|██▎       | 297/1300 [00:10<00:38, 26.26it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 23%|██▎       | 303/1300 [00:10<00:31, 31.69it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 24%|██▎       | 307/1300 [00:10<00:35, 28.34it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 24%|██▍       | 311/1300 [00:11<00:39, 25.09it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 25%|██▍       | 319/1300 [00:11<00:35, 27.75it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 25%|██▌       | 325/1300 [00:11<00:31, 31.44it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 25%|██▌       | 329/1300 [00:11<00:35, 27.20it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 26%|██▌       | 333/1300 [00:11<00:35, 27.37it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 26%|██▌       | 337/1300 [00:12<00:33, 29.05it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 26%|██▌       | 341/1300 [00:12<00:33, 28.78it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 27%|██▋       | 345/1300 [00:12<00:31, 30.36it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 27%|██▋       | 349/1300 [00:12<00:31, 30.23it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 27%|██▋       | 353/1300 [00:12<00:30, 30.80it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 27%|██▋       | 357/1300 [00:12<00:38, 24.24it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 28%|██▊       | 361/1300 [00:12<00:35, 26.11it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 28%|██▊       | 365/1300 [00:13<00:32, 28.77it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 28%|██▊       | 369/1300 [00:13<00:33, 27.85it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 29%|██▉       | 375/1300 [00:13<00:36, 25.63it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 29%|██▉       | 383/1300 [00:13<00:32, 27.84it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 30%|██▉       | 389/1300 [00:13<00:29, 31.11it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 30%|███       | 393/1300 [00:14<00:29, 30.81it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 31%|███       | 397/1300 [00:14<00:34, 26.10it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 31%|███       | 401/1300 [00:14<00:32, 27.37it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 31%|███       | 405/1300 [00:14<00:31, 28.06it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 31%|███▏      | 409/1300 [00:14<00:30, 29.69it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 32%|███▏      | 413/1300 [00:14<00:29, 29.74it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 32%|███▏      | 417/1300 [00:14<00:28, 31.09it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 32%|███▏      | 421/1300 [00:15<00:29, 29.41it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 33%|███▎      | 425/1300 [00:15<00:36, 24.19it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 33%|███▎      | 429/1300 [00:15<00:35, 24.72it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 34%|███▎      | 437/1300 [00:15<00:31, 27.79it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 34%|███▍      | 443/1300 [00:15<00:27, 31.15it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 34%|███▍      | 447/1300 [00:15<00:31, 27.31it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 35%|███▍      | 451/1300 [00:16<00:31, 26.97it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 35%|███▌      | 457/1300 [00:16<00:25, 32.69it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 35%|███▌      | 461/1300 [00:16<00:31, 26.64it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 36%|███▌      | 465/1300 [00:16<00:32, 26.03it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 36%|███▋      | 473/1300 [00:16<00:28, 28.88it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 37%|███▋      | 476/1300 [00:17<00:30, 26.92it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 37%|███▋      | 479/1300 [00:17<00:30, 26.84it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 37%|███▋      | 483/1300 [00:17<00:29, 27.67it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 37%|███▋      | 487/1300 [00:17<00:28, 28.91it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 38%|███▊      | 491/1300 [00:17<00:27, 29.18it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 38%|███▊      | 495/1300 [00:17<00:26, 30.78it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 38%|███▊      | 499/1300 [00:17<00:26, 30.53it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 39%|███▊      | 503/1300 [00:17<00:25, 31.72it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 39%|███▉      | 507/1300 [00:18<00:25, 31.01it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 39%|███▉      | 511/1300 [00:18<00:25, 31.26it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 40%|███▉      | 515/1300 [00:18<00:31, 24.60it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 40%|███▉      | 519/1300 [00:18<00:30, 26.01it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 40%|████      | 523/1300 [00:18<00:27, 28.22it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 41%|████      | 527/1300 [00:18<00:27, 28.16it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 41%|████      | 531/1300 [00:18<00:25, 30.01it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 41%|████      | 535/1300 [00:19<00:25, 29.99it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 41%|████▏     | 539/1300 [00:19<00:24, 31.39it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 42%|████▏     | 543/1300 [00:19<00:24, 30.34it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 42%|████▏     | 547/1300 [00:19<00:23, 31.72it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 42%|████▏     | 551/1300 [00:19<00:24, 30.49it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 43%|████▎     | 555/1300 [00:19<00:30, 24.55it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 43%|████▎     | 559/1300 [00:19<00:27, 26.50it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 43%|████▎     | 563/1300 [00:20<00:26, 27.48it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 44%|████▎     | 567/1300 [00:20<00:25, 29.25it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 44%|████▍     | 571/1300 [00:20<00:24, 29.42it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 44%|████▍     | 575/1300 [00:20<00:23, 30.34it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 45%|████▍     | 579/1300 [00:20<00:23, 30.30it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 45%|████▍     | 583/1300 [00:20<00:23, 30.83it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 45%|████▌     | 587/1300 [00:20<00:31, 22.66it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 46%|████▌     | 595/1300 [00:21<00:26, 26.21it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 46%|████▋     | 603/1300 [00:21<00:24, 28.06it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 47%|████▋     | 609/1300 [00:21<00:22, 31.03it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 47%|████▋     | 613/1300 [00:21<00:24, 28.25it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 47%|████▋     | 617/1300 [00:21<00:25, 27.12it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 48%|████▊     | 623/1300 [00:22<00:21, 31.92it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 48%|████▊     | 627/1300 [00:22<00:26, 25.84it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 49%|████▊     | 631/1300 [00:22<00:24, 27.27it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 49%|████▉     | 635/1300 [00:22<00:23, 27.95it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 49%|████▉     | 639/1300 [00:22<00:22, 29.66it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 49%|████▉     | 643/1300 [00:22<00:22, 29.76it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 50%|████▉     | 647/1300 [00:22<00:21, 30.50it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 50%|█████     | 651/1300 [00:23<00:21, 30.33it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 50%|█████     | 655/1300 [00:23<00:20, 31.30it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 51%|█████     | 659/1300 [00:23<00:20, 30.84it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 51%|█████     | 663/1300 [00:23<00:23, 26.85it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 51%|█████▏    | 667/1300 [00:23<00:25, 25.08it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 52%|█████▏    | 671/1300 [00:23<00:23, 26.36it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 52%|█████▏    | 675/1300 [00:23<00:21, 28.51it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 52%|█████▏    | 678/1300 [00:24<00:23, 26.65it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 52%|█████▏    | 681/1300 [00:24<00:23, 26.36it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 53%|█████▎    | 687/1300 [00:24<00:23, 25.85it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 53%|█████▎    | 693/1300 [00:24<00:19, 31.28it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 54%|█████▎    | 697/1300 [00:24<00:19, 30.99it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 54%|█████▍    | 701/1300 [00:24<00:23, 25.31it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 54%|█████▍    | 707/1300 [00:25<00:18, 31.88it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 55%|█████▍    | 711/1300 [00:25<00:19, 30.03it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 55%|█████▌    | 715/1300 [00:25<00:23, 24.88it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 56%|█████▌    | 723/1300 [00:25<00:20, 27.72it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 56%|█████▌    | 729/1300 [00:25<00:18, 31.04it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 56%|█████▋    | 733/1300 [00:25<00:18, 31.32it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 57%|█████▋    | 737/1300 [00:26<00:21, 26.33it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 57%|█████▋    | 743/1300 [00:26<00:17, 31.24it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 57%|█████▋    | 747/1300 [00:26<00:19, 27.75it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 58%|█████▊    | 751/1300 [00:26<00:20, 26.38it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 58%|█████▊    | 757/1300 [00:26<00:17, 30.99it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 59%|█████▊    | 761/1300 [00:26<00:19, 27.88it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 59%|█████▉    | 765/1300 [00:27<00:20, 25.95it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 59%|█████▉    | 771/1300 [00:27<00:16, 31.94it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 60%|█████▉    | 775/1300 [00:27<00:19, 27.48it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 60%|█████▉    | 779/1300 [00:27<00:19, 26.13it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 61%|██████    | 787/1300 [00:27<00:17, 28.62it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 61%|██████    | 793/1300 [00:28<00:16, 31.22it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 61%|██████▏   | 797/1300 [00:28<00:17, 28.36it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 62%|██████▏   | 801/1300 [00:28<00:19, 25.87it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 62%|██████▏   | 809/1300 [00:28<00:17, 27.97it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 63%|██████▎   | 815/1300 [00:28<00:15, 30.61it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 63%|██████▎   | 819/1300 [00:28<00:16, 29.92it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 63%|██████▎   | 823/1300 [00:29<00:18, 26.47it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 64%|██████▍   | 829/1300 [00:29<00:15, 30.55it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 64%|██████▍   | 833/1300 [00:29<00:16, 28.65it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 64%|██████▍   | 837/1300 [00:29<00:17, 25.99it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 65%|██████▍   | 843/1300 [00:29<00:15, 29.51it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 65%|██████▌   | 847/1300 [00:30<00:15, 28.46it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 65%|██████▌   | 851/1300 [00:30<00:17, 25.89it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 66%|██████▌   | 857/1300 [00:30<00:14, 29.56it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 66%|██████▌   | 861/1300 [00:30<00:15, 27.95it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 67%|██████▋   | 865/1300 [00:30<00:16, 25.97it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 67%|██████▋   | 871/1300 [00:30<00:13, 31.29it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 67%|██████▋   | 875/1300 [00:31<00:15, 27.56it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 68%|██████▊   | 879/1300 [00:31<00:16, 25.59it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 68%|██████▊   | 885/1300 [00:31<00:12, 32.08it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 68%|██████▊   | 889/1300 [00:31<00:15, 26.97it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 69%|██████▊   | 893/1300 [00:31<00:15, 26.29it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 69%|██████▉   | 897/1300 [00:31<00:14, 27.11it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 69%|██████▉   | 901/1300 [00:31<00:13, 28.93it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 70%|██████▉   | 905/1300 [00:32<00:13, 29.06it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 70%|██████▉   | 909/1300 [00:32<00:12, 30.63it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 70%|███████   | 913/1300 [00:32<00:12, 30.43it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 71%|███████   | 917/1300 [00:32<00:12, 31.69it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 71%|███████   | 921/1300 [00:32<00:12, 30.55it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 71%|███████   | 925/1300 [00:32<00:15, 24.24it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 71%|███████▏  | 929/1300 [00:32<00:13, 26.70it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 72%|███████▏  | 933/1300 [00:33<00:13, 27.55it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 72%|███████▏  | 937/1300 [00:33<00:12, 29.51it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 72%|███████▏  | 941/1300 [00:33<00:12, 29.02it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 73%|███████▎  | 945/1300 [00:33<00:11, 31.37it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 73%|███████▎  | 949/1300 [00:33<00:11, 30.31it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 73%|███████▎  | 953/1300 [00:33<00:11, 30.88it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 74%|███████▎  | 957/1300 [00:33<00:14, 23.51it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 74%|███████▍  | 961/1300 [00:34<00:12, 26.64it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 74%|███████▍  | 965/1300 [00:34<00:12, 26.96it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 75%|███████▍  | 969/1300 [00:34<00:11, 29.52it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 75%|███████▌  | 975/1300 [00:34<00:12, 26.43it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 75%|███████▌  | 981/1300 [00:34<00:10, 31.02it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 76%|███████▌  | 985/1300 [00:34<00:10, 30.83it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 76%|███████▌  | 989/1300 [00:35<00:12, 25.01it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 77%|███████▋  | 997/1300 [00:35<00:11, 27.46it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 77%|███████▋  | 1003/1300 [00:35<00:09, 31.13it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 77%|███████▋  | 1007/1300 [00:35<00:09, 31.50it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 78%|███████▊  | 1011/1300 [00:35<00:10, 26.45it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 78%|███████▊  | 1017/1300 [00:35<00:09, 30.34it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 79%|███████▊  | 1021/1300 [00:36<00:09, 30.31it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 79%|███████▉  | 1025/1300 [00:36<00:10, 25.54it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 79%|███████▉  | 1031/1300 [00:36<00:08, 31.39it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 80%|███████▉  | 1035/1300 [00:36<00:09, 29.28it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 80%|███████▉  | 1039/1300 [00:36<00:10, 24.90it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 80%|████████  | 1045/1300 [00:36<00:08, 30.77it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 81%|████████  | 1049/1300 [00:37<00:08, 29.88it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 81%|████████  | 1053/1300 [00:37<00:09, 25.33it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 81%|████████▏ | 1059/1300 [00:37<00:08, 29.66it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 82%|████████▏ | 1063/1300 [00:37<00:07, 29.74it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 82%|████████▏ | 1067/1300 [00:37<00:09, 25.27it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 83%|████████▎ | 1073/1300 [00:37<00:07, 31.84it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 83%|████████▎ | 1077/1300 [00:38<00:07, 28.99it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 83%|████████▎ | 1081/1300 [00:38<00:08, 24.84it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 84%|████████▍ | 1089/1300 [00:38<00:07, 27.77it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 84%|████████▍ | 1095/1300 [00:38<00:06, 31.07it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 85%|████████▍ | 1099/1300 [00:38<00:06, 29.26it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 85%|████████▍ | 1103/1300 [00:39<00:07, 26.83it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 85%|████████▌ | 1109/1300 [00:39<00:06, 31.80it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 86%|████████▌ | 1113/1300 [00:39<00:06, 28.49it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 86%|████████▌ | 1117/1300 [00:39<00:06, 26.25it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 87%|████████▋ | 1125/1300 [00:39<00:06, 28.21it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 87%|████████▋ | 1131/1300 [00:39<00:05, 30.41it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 87%|████████▋ | 1135/1300 [00:40<00:05, 29.79it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 88%|████████▊ | 1139/1300 [00:40<00:06, 26.43it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 88%|████████▊ | 1145/1300 [00:40<00:04, 31.47it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 88%|████████▊ | 1149/1300 [00:40<00:05, 28.78it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 89%|████████▊ | 1153/1300 [00:40<00:05, 25.21it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 89%|████████▉ | 1161/1300 [00:41<00:05, 26.01it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 90%|████████▉ | 1169/1300 [00:41<00:04, 28.56it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 90%|█████████ | 1175/1300 [00:41<00:04, 27.22it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 91%|█████████ | 1181/1300 [00:41<00:03, 31.66it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 91%|█████████ | 1185/1300 [00:41<00:03, 29.81it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 91%|█████████▏| 1189/1300 [00:42<00:04, 25.32it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 92%|█████████▏| 1197/1300 [00:42<00:03, 27.79it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 93%|█████████▎| 1203/1300 [00:42<00:03, 30.92it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 93%|█████████▎| 1207/1300 [00:42<00:03, 30.71it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 93%|█████████▎| 1211/1300 [00:42<00:03, 25.77it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 94%|█████████▎| 1217/1300 [00:42<00:02, 31.89it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 94%|█████████▍| 1221/1300 [00:43<00:02, 29.15it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 94%|█████████▍| 1225/1300 [00:43<00:02, 25.04it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 95%|█████████▍| 1233/1300 [00:43<00:02, 27.74it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 95%|█████████▌| 1239/1300 [00:43<00:01, 31.45it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 96%|█████████▌| 1243/1300 [00:43<00:01, 29.56it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 96%|█████████▌| 1247/1300 [00:44<00:02, 24.22it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 97%|█████████▋| 1255/1300 [00:44<00:01, 27.46it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 97%|█████████▋| 1261/1300 [00:44<00:01, 30.62it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 97%|█████████▋| 1265/1300 [00:44<00:01, 30.50it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 98%|█████████▊| 1269/1300 [00:44<00:01, 25.23it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 98%|█████████▊| 1275/1300 [00:45<00:00, 30.15it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 98%|█████████▊| 1279/1300 [00:45<00:00, 30.10it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 99%|█████████▊| 1283/1300 [00:45<00:00, 24.35it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      " 99%|█████████▉| 1291/1300 [00:45<00:00, 26.93it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "100%|█████████▉| 1297/1300 [00:45<00:00, 30.79it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "100%|██████████| 1300/1300 [00:45<00:00, 28.35it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "def g_power_analysis():\n",
    "    for att in np.linspace(-30, 30, 13):\n",
    "        for seed in range(n_samples):\n",
    "            yield att, seed\n",
    "            \n",
    "\n",
    "parallelize = Joblib(prefer='processes', progress=True)\n",
    "results = parallelize.run([Function(panel, *args) for args in g_power_analysis()])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cdee8c4b-6956-47b4-a5ec-7579464fa022",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:52:13.162474Z",
     "iopub.status.busy": "2023-12-08T20:52:13.161945Z",
     "iopub.status.idle": "2023-12-08T20:52:13.166514Z",
     "shell.execute_reply": "2023-12-08T20:52:13.165917Z"
    },
    "papermill": {
     "duration": 0.019496,
     "end_time": "2023-12-08T20:52:13.167738",
     "exception": false,
     "start_time": "2023-12-08T20:52:13.148242",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['pred_effect', 'pred_sign', 'pred_avg_te', 'pred_avg_ci_lb',\n",
       "       'pred_avg_ci_ub', 'pred_rel_te', 'pred_rel_ci_lb', 'pred_rel_ci_ub',\n",
       "       'pred_perc_te', 'pred_perc_ci_lb', 'pred_perc_ci_ub', 'pred_cum_te',\n",
       "       'pred_cum_ci_lb', 'pred_cum_ci_ub', 'true_effect', 'true_sign',\n",
       "       'true_avg_te', 'true_avg_ci_lb', 'true_avg_ci_ub', 'true_rel_te',\n",
       "       'true_rel_ci_lb', 'true_rel_ci_ub', 'true_perc_te', 'true_perc_ci_lb',\n",
       "       'true_perc_ci_ub', 'true_cum_te', 'true_cum_ci_lb', 'true_cum_ci_ub',\n",
       "       'att', 'seed', 'true_in_ci', 'avg_te_error', 'rel_te_error'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dx.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ac4869b1-5d83-4769-9ff7-db7a6481143c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:52:13.194709Z",
     "iopub.status.busy": "2023-12-08T20:52:13.194183Z",
     "iopub.status.idle": "2023-12-08T20:52:13.221825Z",
     "shell.execute_reply": "2023-12-08T20:52:13.221277Z"
    },
    "papermill": {
     "duration": 0.042592,
     "end_time": "2023-12-08T20:52:13.223225",
     "exception": false,
     "start_time": "2023-12-08T20:52:13.180633",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "dx = (pd.DataFrame(results)\n",
    "      .assign(true_in_ci=lambda dd: dd['true_avg_te'].between(dd['pred_avg_ci_lb'], dd['pred_avg_ci_ub']))\n",
    "      .assign(perc_te_error=lambda dd: dd['pred_perc_te'] - dd['true_perc_te'])\n",
    "      )\n",
    "\n",
    "# get the power and coverage for each group now\n",
    "pw = dx.assign(sign=lambda dd: dd['pred_sign']).groupby('att').apply(f_power).sort_index().reset_index()\n",
    "coverage = dx.groupby('att')['true_in_ci'].mean()\n",
    "error = dx.groupby('att').aggregate(mean=('perc_te_error', 'mean'), se=('perc_te_error', 'sem'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d989feaa-1f03-4ba7-889a-fbaa3604e3f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-08T20:52:13.250817Z",
     "iopub.status.busy": "2023-12-08T20:52:13.250389Z",
     "iopub.status.idle": "2023-12-08T20:52:13.775338Z",
     "shell.execute_reply": "2023-12-08T20:52:13.774687Z"
    },
    "papermill": {
     "duration": 0.539901,
     "end_time": "2023-12-08T20:52:13.776605",
     "exception": false,
     "start_time": "2023-12-08T20:52:13.236704",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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fqisrFR/36tXrxav11Qhd/DgQaPtTede63lCCCGE6EYUIYQQQnQ7Dz30kAIot9122zWfm52drfz444+KTqcz2l5VVaXMnTtXAZQnn3yy2Xm33nqrAijbt2832v76668rgPL66683OwdQWns78tFHHymA4uHhoRw+fFjdrtfr1Wu6uroq586dMzqvd+/eCqBYWloqCQkJLV676b6urq7Kvn37WhzvgAED2vwck5KSlL179zY7vrS0VJk4caICKH/5y1+a7W8a6+eff95s39GjRxULCwsFUP75z382G7uzs3OL9zx27JhiZWWlaDQa5d///rfRvo0bNyo2NjYKoPzwww9G++bNm6de+8knn1QaGhrUfSdOnFA8PT0VQPn444/V7TU1NYqlpaUCKBs2bGg2FkVRlDvvvFP9c7yUv7+/AijLli1r8bzHH39cHU9lZWWLxwghhBCia5NKKSGEEKIbKioqAsDLy+uazw0ICGDChAlYWBi/TXBwcOCjjz7CysqK1atXt8s4r+Svf/0rAK+99hpDhgxRt2s0Gl5//XUGDRpEWVkZn376aYvnz5s376pVYm+99VazFQdffvllXFxcSEtLIzs7u01jDQ8PZ/To0c22u7m58eGHHwK0+Xt24cIFNm7cyKxZs9Dr9fj5+XHPPfc0O+6FF15o8Z5LliyhsbGRmTNn8tBDDxntmzx5Mo899hgACxcubPH+vr6+/O1vf8PK6uIizZGRkbz22muAoQKtiZ2dHTfddBNAi38Op06dYtu2bcDFqq8mt912GwD/7//9P6PqK4Dz58+zatUq9fHl5wohhBCie5BQSgghhBAt2rNnD++//z6//e1vefjhh5k/fz5PPvkkNjY2FBUVcf78eZPdOycnhzNnzgAYTfNrotFoePjhhwHYvn17i9e4tHl2a6ZPn95sm62tLX369AEgNze3zWPW6XRs3bqVP/3pTzz55JPq9+zPf/4zAKmpqa2e+/DDD6u9olxdXZk6dSpnzpyhb9++bNy4EUdHx2bntPb8mvpdXbqa36V+9atfAZCYmNisRxTAPffcg52dXbPtTX8Op06dIi8vT93+2muvodFoSEhI4IknnuDUqVOUl5ezZcsWJk+erB53ecj54osvYmdnx+HDh5k1axYnTpygsrKSvXv3cscddxhNDbz8XCGEEEJ0D1ZXP0QIIYQQXY2npycA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j6mjR2v1pXwn0k5ow/ENjiDqwC8Hii0THRKtE+knyt3WupHr1DumtwuqBACg9soPqgr2qEpNTXUqqGrUqJHCwsLKDKr27dunVatWaf/+/bpy5YoCAgLUpk0b3XXXXWrbtq0r35pLEEoZhFAKcL+vv/5an3/+uex2u9q0aaO7775bvgUvCwJQveTm5o07tXix9P770pUr5a+zbp3Uu7fLS6sO7Ha7Dp8/XKgn1LELx4otd3349erZpKd6xfRSjyY9VD+ovmLmxCg5PbnYQOdS3mDnUSFROjrpKIOZAwBgAqvVWqxHVWlBVUBAQLFL//KDqn379un111/X2bNnFR0dreDgYGVmZurEiROqX7++Hn74YY8LpgilDEIoBbiP3W7Xl19+qS1btkiSunXrpttuu81ju7ACtdK770oPPFD+co0bS927S61bS23a5D1at5ZCQ11eoqvZ7XbtO7tPG45t0MakvCDqZMbJQst4WbzUuVFn9WraSz2b9tTNTW7WVYFXFdtW/t33JBUKpizK++Z1xe9XMJ4UAABulB9UFexRlZKSUmpQFR4ero0bNyo5OVkdOnRQUFCQo0eV3W7X3r171blzZz3++OMedR5EKGUQQinAPXJzc/XRRx9pz549kqT4+HjddNNNDCIIeJr166U+fSq/fkTEbwFVwbCqaVOpmv5iZrVZtTt1t6MX1KakTTp76WyhZXy9fBXbOFY9m/ZUr6a9dGP0jarrX9ep7a/ct1KT1kwqdBe+6JBoze4/m0AKAIBqyGq16syZMzp58mShS/9yc3N14cIFrVu3TkFBQfL395e3t7fq16/v6BmVlpamX375Rc8++6xiYmLc+0YqwNksxcfEmgDAKZcvX9by5ct17NgxeXt7684779T111/v7rIAVEaPHnljRiUnFx/oXMobUyoiQnrnnbyB0vfvz3scOCCdPJk3SHpKSl64VVBAgNSqVfGwqnVrqU4dU95avhxrjnae2ukYE2pz0malZaUVWibQJ1Bx0XHq2aSnejbtqRuiblCgb2Cl9jek7RDd2fpObUrapFMZp9SobiP1aNKDS/YAAKimvL29FRERoYiICHXu3FnSb0HVhg0btH37doWGhury5cuyWq2y2WyOdYODg5WcnKyMjAx3le9ShFIA3KroHSZCQ0O1dOlSnT59Wv7+/ho2bJiaN2/u7jIBVJa3tzRnjjR0aF4AVTCYyu/5OHeuNGBA8XXT0/PCqfyQKj+wOngwb5yq3bvzHkVFRRUPq9q0yZtuQG/LK7lX9G3yt46eUFtObNGlnEuFlqnrV1c3NbnJcTle18iu8vP2q/K+83l7eTOYOQAAHiw/qOrevbs+++wz1a9fX3Xq1NGlS4V/p8jMzFRAQIDq1nWuR7WnIZQC4DZF7zAhSRkZGWrevLmaN2+u4cOHKyIiws1VAqiyIUOkFSukSZOkn3+75ExRUdLs2XnzSxISInXrlvcoyGqVjh0rHlYdOCCdPp23j59/ltauLbxecPBvvakKBlatWkmBpfdayszO1JYTW/IGJk/aqG9+/kZZ1qxCy4QFhKln056OR8eIjvLx4tcsAABQtiZNmqhNmzb67rvv1K5dO9Up0OPbbrfr559/VufOndWkSRM3Vuk6jClVDsaUAlyj6B0msrOz9d133+n8+fO6+uqr9corryg2NtbdZQIwktUqbdoknTolNWqUd2mft8GXnJ07lxdOFQ2rDh3KuytgSSyWvDGqfg2rLrRqov81zNIG7xPa+MtO7Ti1Q7m2wuuGB4c7xoPq2bSnrm14rbws1XOMKwAAUL0VPDeKiopy3H3v559/5u57tR2hFGA8m82mF154Qdu2bVPz5s118eJFHTp0SHa7XSEhIfL29lZsbKzH3WECQDWWkyMdOVI8rNq3T2eyzmtTU2ljU2lDU+n7CMle5Cq/6Jwg9fJrpZ6NuqvXdYPUsmNfWQIC3PNeAABAjVP0KpKAgAC1bdtWgwcP9rhASiKUMgyhFOAcu92u7OxsXbx4UZmZmcrMzCz1+YkTJ/T555877jCRr0GDBmrbtq0yMjI88g4TADzDyYyTeeNBHdugjUkbtffM3mLLtEj3Va9DOep5XOp5XIq5UGQBLy+pWbPi41a1aSPVr2/I2FUAAKB2KTrebpMmTTz2S3ruvgegyux2uy5fvuxU0HTx4kXllnZpTBEZGRnKzc2Vn5+f/P395evrqwYNGqhJkyayWCw1/g4TAMxjt9t17MKxvPGgfh2Y/PD5w8WWu7bBtY7L8Xo07aHIupFSVpZ0+HDhnlX5z9PT8+YdPix99lnhjYWF/RZQFQysmjeXfH2NeWNmXAoJAABM5eXlVeu+lCeUAmoZq9XqCJLKC5kuXbpU6HakzvDz81NwcLCCg4NVp06dEp+fO3dO6enpatiwoUJDQ4tto6bfYQKA69jtdv30y0/acHyDI4g6kX6i0DIWWdQxoqNjPKgeTXuoflD94hvz95fatct7FN6JlJpaclh1/Lh0/ry0dWveoyAfH+maa4qHVa1bS1dd5fybXLmy5EHj58wpfdB4AACAaohQCqig6tilMjs726mQKTMzU5cvX67w9gMDA8sMmQo+9/Mr/5bnTZo00bXXXqvvvvtOISEhshS4zKU23GECgHFsdpv2nN7jCKA2Ht+o1MzUQsv4ePmoa2RX9WzSU71ieumm6JsUGlA8EHeaxSJFROQ9evcuPO/yZengweKB1YEDUmbmb4Owf/xx4fUaNCj5UsCYmMI9oFaulIYOzQvGCkpOzpu+YgXBFAAA8BiMKVUOxpRCQSUNPtemTRvdddddhg4+Z7fbdeXKFadCpszMTGVnZ1do+15eXgoKCnIqZAoODpa3Cy4JqYl3mADgerm2XO1K2eUYD2rT8U06f+V8oWX8vf11Q9QN6tm0p3o27am4qDgF+wW7qeJf2e15wVFJvasK9ngqys9PatkyL6Bq2VJ66628OwyWxGLJ6zF19CiX8gEAALdioHOD1IRQKic3Rx9+/aGOpx5X0/CmuvuGu+XrY9CYFrVIfohy+sxpeYV6Kdc7Vz5WH9nSbGrYoGG5IYrNZtOlS5ecDpqsVmuF6vPx8XEqZKpTp44CAwML9U5yl3379unDlR9q446NSs9MV0hwiHp17aUhdw0hkKokq82qTUmbdCrjlBrVbaQeTXrI24uT08qiPY1VmfbMtmZrW/K2vF5QSRv1v6T/KSO78Hhzwb7BujH6RsfleN0ad1OAjwfdGe/iRemnn4qHVT/9JF25UvHt3Xdf3iWHdepIwcF5j7KeBwQwMDtjdBmL9jQW7Wks2tNYtKexalB71tiBzufNm6eXX35ZKSkp6tChg9544w3FxsaWuvwHH3ygadOm6dixY2rZsqVefPFFDRgwwMSK3ev1T1/XtH9MU/rP6VKuJB8pJCpEz41/Tg/f/rC7y/MYNptNq1at0q4ju7THvkcXz17Mm2GXgr2D1fpMa73zzju67777HMFT0ZDp0qVLqmgG7O/v7wiUyguc/Pz8qkXQVBH7tE/zA+YruUmylC3JT9rrv1dtf/2Dilm5b6UmrZmkn9N/63URFRKlOf3naEhbLuepKNrTWM6256WcS/rm528cY0Jt/XmrruQWDmZC/UPVo2kPx+V4nSI6ydfbg79sqVNH6tw571GQzSYlJf0WVn3yibR2bfnbW7KkYvv38pKCgpwPsSry3KiB3V2JMbqMRXsai/Y0Fu1pLNrTWLW0PT2qp9Ty5cs1YsQIzZ8/X927d9fs2bP1wQcf6MCBA2rYsGGx5bds2aKePXtq1qxZuv3227VkyRK9+OKL2rlzp9q3b+/UPj25p9Trn76uSU9Pki5JCpXkKylHUpqkIGnO03OqbTBlt9tlt9tltVqLPWw2m+nTU1NTtWjZIh3MOCjlB9W2Xx+SlCs1DW6qwbcNVr169Up9XxaLRUFBQU71ZgoODpaPj8flxk5buW+lhr4/VHYV/i/IorxgbcXvV3DiXwG0p7FoT2OV155P9nhSVrtVG45v0Lbkbcqx5RRarkFQA8eleD2b9tR1Da+rnT3W1q+X+vQpf7m775bq1csbwyozM68nVknPKzHGYIX5+RkfdNWpIwUG5oVpVVXaGF35X/IwRlfF0J7Goj2NRXsai/Y0Vg1szxp5+V737t3VrVs3zZ07V1Je75Xo6GhNnDhRU6ZMKbb8sGHDlJmZqU8//dQx7YYbblDHjh01f/58p/aZ35Dnz5/3qFAqJzdHDQY3UMbRDKnBrxPz/6Vtks5KdZrU0a7EXfKyeBUKY2xWm1PhTUVCI5vVVnYIZCuwnDXvdXWSkpqiRR8tki3AJhXtjGTJe3hne+upPz2lNm3bFBqPKTg4WMF18v4OCgpy+6Do1YHVZlWbuW10MuNkqcs0DmmsfQ/tq50nnhVEexqL9jSWM+1ZVKO6jRyX4vVs2lNt6rfxuJ6gLmG1Ss2a5Y1NVZqoKOnIEee6+lut0qVLZQdXBZ8XfJS3fAUvQa+UwEDnQ6ygoMLT8y9bvO8+6cyZ0vfRuLG0b5/HXjphKqs1b+yzk2X8rNOezqM9jUV7Gov2NJYz7VmRz/dqIj09XWFhYTUnlMrOzlZQUJBWrFihwYMHO6aPHDlSFy5c0MdF72KjvDt8JSQk6JFHHnFMmzFjhj766CN9//33Je4nKytLWVlZjtfp6emKjo7Wjh07VKdOHcPej6t9tv0zJTybIAVI8pN0Uir0BXXur48oSf5uKLAyLJK85AiBHI/8jMeryDLOTitrW/nTMiXtVl5b+hdYJv+R9eujuyTPyS4BoNq4ucnNGtBygLpFdlN0aDQhVGm++EKaOLH0+W+8Id16q3n1lCY7Oy/wunw57+/855cv/9ZLq6znBdcpuj4AALXRe+9J3bu7uwqnXbx4UV26dKk5Y0qdPXtWVqtV4eHhhaaHh4dr//79Ja6TkpJS4vIpKSml7mfWrFl65plnql6wmyX/kuwYQ0pSXrhSMJTyUd6lfBblXdZXVkhT1mtXTZNKDpTcpZ6kFEmnJdVR4Xrski5KCpdU1/TKAKBGuKvNXbq99e3uLqP6u/XWvOBp5kwpNfW36RER0pNPVo9ASsq7bM/PL+8yQiPZbHmDv5cVXDn7/MwZ6fRpY+sDAMBVyurZ68E8JpQyy9SpU5WQkOB4nd9Tqnnz5h51+V7nlM5SkPL+hf0lxfw6Iz/4uSLpsvTO39/R0JuGuqdID7Lp+CYNemOQ9LXyAqgQ5fWaypaUISlMUifpkwmfqEfTHm6s1DNsOr5Jg5YOKne5T+6lPZ1BexqL9jSWs+3Z8dqOahHTwoSKaoAWLaQ//anG3J3Hbdavl/r2LX+5Tz7Ja1+UbdMmaVD5P+u0p5NoT2PRnsaiPY3lbHt27Jj3O4CHSE9Pd2o5jwml6tevL29vb6UW/FZQUmpqqiIiIkpcJyIiokLLS3l3O/P3L349m5eXl0eNBXTPjfdofPR4pR9NzxtTquDvqXZJGVJos1CN6D1Cvj4ecGccN7ut1W2KahGlny0/S/sknVVeOOUjqbGkNlL0NdG6rdVtjDHjhNta3aaoelFKTk8uNvCxlDf4cVRIFO3pJNrTWLSnsZxtz14xvTzqc9btvLykW25xdxWerVevvDE6kpOLDywr5Q0uGxUl3XYbgZ8zbruN9jQS7Wks2tNYtKexnG3PXr2MucmHSZz9vc5j3pGfn5+6dOmitQVuhWyz2bR27VrFxcWVuE5cXFyh5SXpyy+/LHX5msTXx1fPjX8ur7fUGeX1jLL9+vcZScHSs+OfJZBykreXt+b0nyNLA4t0s6Q+knr9+vdNkqWBRbP7z+YE1Un57Sn9dvetfPmvaU/n0Z7Goj2NRXui2vL2zrvNtvTb3Y3y5b+ePZsTKmfRnsaiPY1FexqL9jRWLW9PjwmlJCkhIUFvv/223n33Xe3bt0/jx49XZmamRo0aJUkaMWKEpk6d6lh+0qRJWrNmjV555RXt379fTz/9tLZv364JEya46y2Y6uHbH9acp+copFmIdFnSL5Iu5/WQmjNjjh6+/WF3l+hRhrQdohW/X6GoelF5l+uFSwqToutFc3v4Sshvz8YhjQtNjwqJoj0rgfY0Fu1pLNoT1daQIXm32W5c+NhUVJRH3n7b7WhPY9GexqI9jUV7GqsWt6fH3H0v39y5c/Xyyy8rJSVFHTt21Ouvv67uv45A37t3b8XExGjRokWO5T/44AM99dRTOnbsmFq2bKmXXnpJAwYMcHp/6enpCg0NLXfE+OosJzdHH379oY6nHlfT8Ka6+4a76SFVBVabVZuSNulUxik1qttIPZr04Bv+KqA9jUV7Gov2NBbtiWrLamWMLiPRnsaiPY1FexqL9jRWDWpPZ7MUjwulzFYTQikAAAAAAACzOJuleNTlewAAAAAAAKgZPObue+6S35HM2dsZAgAAAAAA1Gb5GUp5F+cRSpUjIyNDkhQdHe3mSgAAAAAAADxHRkaGQkNDS53PmFLlsNlsOnnypOrWrStL0dszepD09HRFR0frxIkTjI2FaofjE9UZxyeqK45NVGccn6jOOD5RndWU49NutysjI0ORkZHy8ip95Ch6SpXDy8tLUVFR7i7DMCEhIR59YKNm4/hEdcbxieqKYxPVGccnqjOOT1RnNeH4LKuHVD4GOgcAAAAAAIDpCKUAAAAAAABgOkKpWsLf318zZsyQv7+/u0sBiuH4RHXG8YnqimMT1RnHJ6ozjk9UZ7Xt+GSgcwAAAAAAAJiOnlIAAAAAAAAwHaEUAAAAAAAATEcoBQAAAAAAANMRSgEAAAAAAMB0hFIAAAA1zLRp0/Tggw9WaRtTpkzRxIkTDaoIAACgOEIpAAAAF9q6dau8vb01cOBAx7QHHnhAFoul1EdMTEyZ8y0Wi44dO1bi/lJSUjRnzhw9+eSTjmmLFy9WdHS0wsLClJCQUGj5Y8eOqVWrVkpPTy80/bHHHtO7776rI0eOGNcYAAAABVjsdrvd3UUAAADUVGPGjFGdOnWUmJioAwcOKDIyUmlpabp8+bJjmUaNGmnhwoXq37+/JCknJ0e+vr6O+UOGDFH79u317LPPOqY1aNBA3t7exfY3c+ZMbd68WWvWrJEknT17VtHR0Vq0aJGaN2+ugQMHasGCBbr99tslSQMGDNCYMWM0ZMiQYtu65557FBMTo5dfftmYxgAAACjAx90FAAAA1FQXL17U8uXLtX37dqWkpGjRokV64oknFBoaqtDQ0ELL1qtXTxERESVux8/PT0FBQaXOL2jZsmUaP3684/WRI0cUGhqqYcOGSZL69Omjffv26fbbb9fSpUvl6+tbYiAlSYMGDdKTTz5JKAUAAFyCy/cAAABc5P3331ebNm3UunVr3X///VqwYIFc2Un93Llz2rt3r7p27eqY1rJlS126dEnfffedzp07p23btun666/X+fPnNW3aNM2dO7fU7cXGxurnn38u9VJBAACAqiCUAgAAcJHExETdf//9kqT+/fsrLS1NGzZscNn+kpKSZLfbFRkZ6ZgWFhamd999VyNGjFBsbKxGjBihfv366bHHHtOECRN09OhRderUSe3bt9eKFSsKbS9/O8ePH3dZzQAAoPbi8j0AAAAXOHDggL799lutWrVKkuTj46Nhw4YpMTFRvXv3dsk+88epCggIKDT9rrvu0l133eV4vWHDBu3evVtvvPGGWrRooaVLlyoiIkKxsbHq2bOnGjZsKEkKDAyUJF26dMkl9QIAgNqNUAoAAMAFEhMTlZubW6jXkt1ul7+/v+bOnVtsTCkj1K9fX5J0/vx5NWjQoMRlsrKy9Oc//1n/+te/dOjQIeXm5qpXr16SpFatWumbb77RoEGDJOVdDiip1G0BAABUBZfvAQAAGCw3N1fvvfeeXnnlFe3atcvx+P777xUZGamlS5e6ZL/XXHONQkJCtHfv3lKXmTlzpvr376/OnTvLarUqNzfXMS8nJ0dWq9Xxes+ePfL19dW1117rknoBAEDtRk8pAAAAg3366ac6f/68Ro8eXaxH1N13363ExESNGzfO8P16eXkpPj5emzdv1uDBg4vN37t3r5YvX67vvvtOktSmTRt5eXkpMTFRERER2r9/v7p16+ZYftOmTerRo4fjMj4AAAAj0VMKAADAYImJiYqPjy/xEr27775b27dv1+7du12y7zFjxmjZsmWy2WyFptvtdj344IN69dVXFRwcLClvzKhFixbp2Wef1ejRozV37lw1btzYsc6yZcs0duxYl9QJAABgsbvyvsQAAAAwld1uV/fu3TV58mTde++9ld7Of/7zHz366KPavXu3fHzoXA8AAIxHTykAAIAaxGKx6K233io0VlRlZGZmauHChQRSAADAZegpBQAAAAAAANPRUwoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6XzcXUB1Z7PZdPLkSdWtW1cWi8Xd5QAAAAAAAFRrdrtdGRkZioyMlJdX6f2hCKXKcfLkSUVHR7u7DAAAAAAAAI9y4sQJRUVFlTqfUKocdevWlZTXkCEhIW6uBgAAAAAAoHpLT09XdHS0I1MpDaFUOfIv2QsJCSGUAgAAAAAAcFJ5wyAx0DkAAAAAAABM51Gh1MaNGzVo0CBFRkbKYrHoo48+Kned9evXq3PnzvL391eLFi20aNEil9cJAAAAAACAsnlUKJWZmakOHTpo3rx5Ti1/9OhRDRw4UH369NGuXbv0yCOPaMyYMfr8889dXCkAAAAAAADK4lFjSt1222267bbbnF5+/vz5atasmV555RVJUtu2bbV582a99tpr6tevn6vKBAAAAAAAQDk8KpSqqK1btyo+Pr7QtH79+umRRx6p8LZsNptsNptBlQEAAAAAANRMzuYnNTqUSklJUXh4eKFp4eHhSk9P1+XLlxUYGFhsnaysLGVlZTlep6enS5KOHDmiOnXquLZgAAAAAAAAD3fx4kWnlvOoMaXMMGvWLIWGhjoe0dHR7i4JAAAAAACgxqnRPaUiIiKUmppaaFpqaqpCQkJK7CUlSVOnTlVCQoLjdXp6uqKjo9W8eXOFhIS4tF4AAAAAAABPl3/VWXlqdCgVFxen1atXF5r25ZdfKi4urtR1/P395e/vX2y6l5eXvLzoWAYAAAAAAFAWZ/MTj0pZLl68qF27dmnXrl2SpKNHj2rXrl1KSkqSlNfLacSIEY7lx40bpyNHjuivf/2r9u/frzfffFPvv/++Jk+e7I7yAQAAAAAA8CuP6im1fft29enTx/E6/zK7kSNHatGiRTp16pQjoJKkZs2a6bPPPtPkyZM1Z84cRUVF6Z133lG/fv1Mrx0AAAAAAKA0VqtVmzZt0qlTp9SoUSP16NFD3t7e7i7LpSx2u93u7iKqs/T0dIWGhiotLY0xpQAAAAAAgOFWrlypSZMm6eeff3ZMi4qK0pw5czRkyBA3VlY5zmYpHtVTCgAAAACAyqqNPVFcifY0xsqVKzV06FAV7TOUnJysoUOHasWKFR4ZTDnDo8aUAgAAAACgMlauXKmYmBj16dNH9913n/r06aOYmBitXLnS3aV5JNrTGFarVZMmTSoWSElyTHvkkUdktVrNLs0UXL5XDi7fAwAAAADPVlpPFIvFIkk1uieKK9TE9rTb7crJyVF2drbjbzOeJycna8OGDeXWt27dOvXu3dv1DWEQZ7MUQqlyEEoBAAAAgOeyWq2KiYkpNFZPQRaLRVFRUTp69CiXnjnB2fbcv3+/rFarqQFPVZ7n5uaa3JIVs2TJEt17773uLsNpjCkFAAAAAB6OMXskm82my5cvKzMzUxcvXlRmZmaFniclJZUaoEh5PWROnDihhg0byt/f38R35pmysrJ07ty5Uufnt2dwcLCJVbmGn5+f/Pz85Ovr67Lnx44d0+uvv15uLY0aNTLhHZuPUAoAAAAAqiFPuxtXdnZ2pUKj8p5nZmaaUn9ZQQuqxmKxOMIYV4c8Rm3P29vbcTmiK1mtVq1cuVLJyckljiuV3/OsR48eLq/FHQilAAAAAKCacdXduKxWqy5dumRoaJT/3IzLn4KCglSnTh0FBwcrODjY8bykafnPT5w4oZdeeqncbb/99tvq1q2by9+Dp9u2bZvGjh1b7nKffvqpbrnlFkfAg5J5e3trzpw5Gjp0qCwWS6Gf+fxQbPbs2TW2DRlTqhyMKQUAAADATOWN2SNJYWFhmj59uiNgcjZAunz5ssvr9/PzKzUgqsrzwMBAeXlV/Aby+e1ZXk8UxpRyDu3pGiX1jIyOjtbs2bOrZc/I8jDQuUEIpQAAAABUVlZWls6fP1+hR0pKis6ePevSuiwWS6UCImeW9fX1dWntlZHf80xSiT1RPPFuce5Ee7pGTRpDjlDKIDUhlKpJBzZqHo5PAABqlpr42X7lypUKB0v5D1f2TLrhhhvUrl27SvU8CgwMNGW8nOqkpvVEcTfaE2UhlDKIp4dSnjY4ImoXjk8AAGqW6vzZfvny5UoHS1euXKnSvi0Wi0JDQxUWFubU48iRIxo3bly52123bp169+5dpdpqm5oYmroT7YnSEEoZxJNDqdIGR6RLZdXwH68xOD4BANUFn+3GcPVnu91ur1KwlJWVVaX3Z7FYVK9ePaeDpYKP0NDQCo2FxJg9ADwdoZRBPDWUKm9wRD7IKqc6f/vnSTg+AQDVBZ/txnD2s/3IkSOVGmMp/5GdnV2lOr28vCodLIWEhFRqkO3KYsweAJ6MUMognhpKrV+/Xn369Cl3uZEjR6pVq1by8/OTn5+ffH19DXte08KE2tazx2q1KicnR9nZ2crOzjb0+cGDB7V48eJya5gyZYq6du1a6lgIwcHB8vHxMaE1PAff9gO1Az/rxqhtn+02m005OTku+Xw/ePCg/v3vf5dbg7e3t6xWa5Xeh7e3d6WDpbp165oaLFUVY/YA8FSEUgbx1FBq6dKluu+++9xag5eXl+FBl6ufe3t7lzjgY1V69tjtdlmt1lJ/kXNV8FPV5zabzSXHhdH8/f0Nv92wpw7+ybf9QO3Az7oxqtprNz/gccdndWXXz83NdXWzOs3b27tSoVJ+sORpn9FVQQgNwBMRShnEU0MpZ3tK3XHHHWrQoIEhvyhV9Vuv6sBisZQYVlmtVp08ebLc9Rs0aCAvL69ibVMTfswsFov8/f0NCQFPnz6tlStXlrvPrl27yt/fX5mZmbp48aIyMzMdz10dmhW8TbLRoZcrbpNc277tNwsnAsaiPauupv6su6J3bnnzT5w4oXXr1pVbW3h4uLy9vYutXxN+75Fk6Gf7qlWryt3fsmXLNGDAANWpU6dWBUsAUNsQShnEU0MpdwyOmP8LpdHf6rnyubt+ofT29nb6l7zq1IvMKFU9Pu12u7KyskoMq6r63JW3bc7n6+traNAVGBio2NhYJScnl7g/xuiqHHqjGIv2rDpne/YcPHhQNpvN7Z+xNbF3blnyv9hy92e2ET3EK4OBuQEABRFKGcRTQymJwRGdUbDrfVkB2jfffKOJEyeWu7358+frhhtuKDdk8qSxDFyluh6fVqtVly5dMjToyn/u7ssm2rVrp/r167v9hMnX11e+vr7V+hvymtobxV08tT3tdrtyc3NN67lT3vOzZ8/qp59+cnezmMLb29vl/xcdO3ZM8+bNK7eWN998U3FxceVuk6Cl+n62AwDMRyhlEE8OpSQGRzQK3/65Rm07PrOzsysVaDmznCfKD6eqQ0hWtOdA7969derUqRLrtlgsaty4sX788Ud+3p1gtVrVrl27MnvyhYeHa/Xq1dWyd09N4OPjU21+vpwNrc342eKz3TVq22c7AKBkhFIG8fRQSmIMD6Pw7Z9rcHxW3bp163TLLbeUu9xzzz2n1q1bc3IPVIE7w9R9+/bpiSeeKLfGjz/+WLfccoujVnrnlo7Pdtfgsx0AQChlkJoQSsE4fPuH6sgTvu03+jIoVwZoly5dUlZWllvaqTYLCQlRSEiI6UGPJ1126gk/656Iz3YAAIxHKGUQQikUxbd/qI74tt84zt69dPXq1erZs6cJFXm2jRs3asCAAeUut27dOvXu3dv1BXk4ftZdg892AACMRShlEEIpAJ6Cb/uNQW8UY9GexuNnHQAAVHeEUgYhlALgSfi23xj0RjEW7Wk8ftYBAEB1RihlEEIpAKid6I1iLNoTAACg9iCUMgihFADUXvRGMRbtCQAAUDsQShmEUAoAAAAAAMB5zmYpXibWZIh58+YpJiZGAQEB6t69u7799tsyl589e7Zat26twMBARUdHa/Lkybpy5YpJ1QIAAAAAAKAkHhVKLV++XAkJCZoxY4Z27typDh06qF+/fjp9+nSJyy9ZskRTpkzRjBkztG/fPiUmJmr58uV64oknTK4cAAAAAAAABXlUKPXqq69q7NixGjVqlNq1a6f58+crKChICxYsKHH5LVu26KabbtJ9992nmJgY3Xrrrbr33nvL7V0FAAAAAAAA1/KYUCo7O1s7duxQfHy8Y5qXl5fi4+O1devWEte58cYbtWPHDkcIdeTIEa1evVoDBgwodT9ZWVlKT08v9AAAAAAAAICxfNxdgLPOnj0rq9Wq8PDwQtPDw8O1f//+Ete57777dPbsWd18882y2+3Kzc3VuHHjyrx8b9asWXrmmWcMrR0AAAAAAACFeUxPqcpYv369XnjhBb355pvauXOnVq5cqc8++0zPPfdcqetMnTpVaWlpjseJEydMrBgAAAAAAKB28JieUvXr15e3t7dSU1MLTU9NTVVERESJ60ybNk1//OMfNWbMGEnSddddp8zMTD344IN68skn5eVVPJPz9/eXv7+/8W8AAAAAAAAADh7TU8rPz09dunTR2rVrHdNsNpvWrl2ruLi4Ete5dOlSseDJ29tbkmS3211XLAAAAAAAAMrkMT2lJCkhIUEjR45U165dFRsbq9mzZyszM1OjRo2SJI0YMUKNGzfWrFmzJEmDBg3Sq6++qk6dOql79+46dOiQpk2bpkGDBjnCKQAAAAAAAJjPo0KpYcOG6cyZM5o+fbpSUlLUsWNHrVmzxjH4eVJSUqGeUU899ZQsFoueeuopJScnq0GDBho0aJCef/55d70FAAAAAAAASLLYuY6tTOnp6QoNDVVaWppCQkLcXQ4AAAAAAEC15myW4jFjSgEAAAAAAKDmIJQCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmI5QCAAAAAACA6QilAAAAAAAAYDpCKQAAAAAAAJiOUAoAAAAAAACmMzWUunLlipm7AwAAAAAAQDXl8lDKZrPpueeeU+PGjVWnTh0dOXJEkjRt2jQlJia6evcAAAAAAACohlweSs2cOVOLFi3SSy+9JD8/P8f09u3b65133nH17gEAAAAAAFANuTyUeu+99/TWW29p+PDh8vb2dkzv0KGD9u/f7+rdAwAAAAAAoBpyeSiVnJysFi1aFJtus9mUk5Pj6t0DAAAAAACgGnJ5KNWuXTtt2rSp2PQVK1aoU6dOrt49AAAAAAAAqiEfV+9g+vTpGjlypJKTk2Wz2bRy5UodOHBA7733nj799FNX7x4AAAAAAADVkMt7St1555365JNP9NVXXyk4OFjTp0/Xvn379Mknn+h3v/udq3cPAAAAAACAashit9vt7i6iOktPT1doaKjS0tIUEhLi7nIAAAAAAACqNWezFJf3lDLavHnzFBMTo4CAAHXv3l3ffvttmctfuHBBDz30kBo1aiR/f3+1atVKq1evNqlaAAAAAAAAlMTlY0qFhYXJYrEUm26xWBQQEKAWLVrogQce0KhRo8rd1vLly5WQkKD58+ere/fumj17tvr166cDBw6oYcOGxZbPzs7W7373OzVs2FArVqxQ48aNdfz4cdWrV8+ItwYAAAAAAIBKMmWg8+eff1633XabYmNjJUnffvut1qxZo4ceekhHjx7V+PHjlZubq7Fjx5a5rVdffVVjx451BFjz58/XZ599pgULFmjKlCnFll+wYIHOnTunLVu2yNfXV5IUExNj7BsEAAAAAABAhbk8lNq8ebNmzpypcePGFZr+z3/+U1988YU+/PBDXX/99Xr99dfLDKWys7O1Y8cOTZ061THNy8tL8fHx2rp1a4nr/L//9/8UFxenhx56SB9//LEaNGig++67T48//ri8vb1LXCcrK0tZWVmO1+np6RV5uwAAAAAAAHCCy8eU+vzzzxUfH19set++ffX5559LkgYMGKAjR46UuZ2zZ8/KarUqPDy80PTw8HClpKSUuM6RI0e0YsUKWa1WrV69WtOmTdMrr7yimTNnlrqfWbNmKTQ01PGIjo4u7y0CAAAAAACgglweSl111VX65JNPik3/5JNPdNVVV0mSMjMzVbduXcP3bbPZ1LBhQ7311lvq0qWLhg0bpieffFLz588vdZ2pU6cqLS3N8Thx4oThdQEAAAAAANR2Lr98b9q0aRo/frzWrVvnGFNq27ZtWr16tSMc+vLLL9WrV68yt1O/fn15e3srNTW10PTU1FRFRESUuE6jRo3k6+tb6FK9tm3bKiUlRdnZ2fLz8yu2jr+/v/z9/Sv0HgEAAAAAAFAxLu8pNXbsWG3YsEHBwcFauXKlVq5cqaCgIG3YsEGjR4+WJD366KNavnx5mdvx8/NTly5dtHbtWsc0m82mtWvXKi4ursR1brrpJh06dEg2m80x7aefflKjRo1KDKQAAAAAAABgDpf3lJLywqGbbrqpyttJSEjQyJEj1bVrV8XGxmr27NnKzMx03I1vxIgRaty4sWbNmiVJGj9+vObOnatJkyZp4sSJOnjwoF544QU9/PDDVa4FAAAAAAAAlWdKKJXvypUrys7OLjQtJCTE6fWHDRumM2fOaPr06UpJSVHHjh21Zs0ax+DnSUlJ8vL6rfNXdHS0Pv/8c02ePFnXX3+9GjdurEmTJunxxx835g0BAAAAAIBKsVqtysnJcXcZqISiQyVVlsVut9sNqKdUly5d0l//+le9//77+uWXX4rNt1qtrtx9laWnpys0NFRpaWkVCtAAAAAAAEBxdrtdKSkpunDhgrtLQRXUq1dPERERslgsxeY5m6W4vKfUX/7yF61bt07/+Mc/9Mc//lHz5s1TcnKy/vnPf+pvf/ubq3cPAAAAAACqkfxAqmHDhgoKCiox1ED1ZbfbdenSJZ0+fVpS3k3mKsvlodQnn3yi9957T71799aoUaPUo0cPtWjRQk2bNtXixYs1fPhwV5cAAAAAAACqAavV6gikrr76aneXg0oKDAyUJJ0+fVoNGzas9KV8Lr/73rlz59S8eXNJeeNHnTt3TpJ08803a+PGja7ePQAAAAAAqCbyx5AKCgpycyWoqvx/w6qMC+byUKp58+Y6evSoJKlNmzZ6//33JeX1oKpXr56rdw8AAAAAAKoZLtnzfEb8G7o8lBo1apS+//57SdKUKVM0b948BQQEaPLkyfrLX/7i6t0DAAAAAACgGnL5mFKTJ092PI+Pj9f+/fu1Y8cOtWjRQtdff72rdw8AAAAAAIBqyKWhVE5Ojvr376/58+erZcuWkqSmTZuqadOmrtwtAAAAAACo4axWqzZt2qRTp06pUaNG6tGjR6UH3IZ7uPTyPV9fX+3evduVuwAAAAAAALXMypUrFRMToz59+ui+++5Tnz59FBMTo5UrV7q7NFNlZ2e7u4QqcfmYUvfff78SExNdvRsAAAAAAFALrFy5UkOHDtXPP/9caHpycrKGDh3q0mDKZrPppZdeUosWLeTv768mTZro+eeflyT98MMPuuWWWxQYGKirr75aDz74oC5evChJ+uKLLxQQEKALFy4U2t6kSZN0yy23OF5v3rxZPXr0UGBgoKKjo/Xwww8rMzPTMT8mJkbPPfecRowYoZCQED344IOSpMcff1ytWrVSUFCQmjdvrmnTphW7K97MmTPVsGFD1a1bV2PGjNGUKVPUsWPHQsu88847atu2rQICAtSmTRu9+eabRjVdiVw+plRubq4WLFigr776Sl26dFFwcHCh+a+++qqrSwAAAAAAANWU3W7XpUuXnFrWarXq4Ycflt1uL3E7FotFkyZNUnx8vFOX8gUFBVXoLnJTp07V22+/rddee00333yzTp06pf379yszM1P9+vVTXFyctm3bptOnT2vMmDGaMGGCFi1apL59+6pevXr68MMPNXr0aMd7Wb58uSPUOnz4sPr376+ZM2dqwYIFOnPmjCZMmKAJEyZo4cKFjhr+/ve/a/r06ZoxY4ZjWt26dbVo0SJFRkbqhx9+0NixY1W3bl399a9/lSQtXrxYzz//vN58803ddNNNWrZsmV555RU1a9bMsY3Fixdr+vTpmjt3rjp16qTvvvtOY8eOVXBwsEaOHOl0G1WExV7Sv6SB+vTpU/rOLRb997//deXuqyw9PV2hoaFKS0tTSEiIu8sBAAAAAMBjXblyRUePHlWzZs0UEBAgScrMzFSdOnXcUs/FixeLdZ4pTUZGhho0aKC5c+dqzJgxhea9/fbbevzxx3XixAnH9lavXq1Bgwbp5MmTCg8P1yOPPKIffvhBa9eulZTXe+qOO+5QSkqK6tWrpzFjxsjb21v//Oc/HdvdvHmzevXqpczMTAUEBCgmJkadOnXSqlWryqz173//u5YtW6bt27dLkm644QZ17dpVc+fOdSxz88036+LFi9q1a5ckqUWLFnruued07733OpaZOXOmVq9erS1bthTbR0n/lvmczVJc3lNq3bp1rt4FAAAAAACAS+3bt09ZWVnq27dvifM6dOhQKOC66aabZLPZdODAAYWHh2v48OG64YYbdPLkSUVGRmrx4sUaOHCg6tWrJ0n6/vvvtXv3bi1evNixDbvdLpvNpqNHj6pt27aSpK5duxbb//Lly/X666/r8OHDunjxonJzcwuFQQcOHNCf//znQuvExsY6OgplZmbq8OHDGj16tMaOHetYJjc3V6GhoZVoLee4PJTKd+jQIR0+fFg9e/ZUYGCgo1sdAAAAAACovYKCghxjL5Vn48aNGjBgQLnLrV69Wj179nRq384KDAx0etmSdOvWTddcc42WLVum8ePHa9WqVVq0aJFj/sWLF/WnP/1JDz/8cLF1mzRp4nhetGfX1q1bNXz4cD3zzDPq16+fQkNDHZfnOSu//d9++21179690DxX3tHQ5aHUL7/8ot///vdat26dLBaLDh48qObNm2v06NEKCwurUCMBAAAAAICaxWKxOH0J3a233qqoqCglJyeXOK6UxWJRVFSUbr31VsPDlJYtWyowMFBr164tdvle27ZttWjRImVmZjrey//+9z95eXmpdevWjuWGDx+uxYsXKyoqSl5eXho4cKBjXufOnbV37161aNGiQnVt2bJFTZs21ZNPPumYdvz48ULLtG7dWtu2bdOIESMc07Zt2+Z4Hh4ersjISB05ckTDhw+v0P6rwuV335s8ebJ8fX2VlJRUKIEcNmyY1qxZ4+rdAwAAAACAGsLb21tz5syRpGJXX+W/nj17tkt69wQEBOjxxx/XX//6V7333ns6fPiwvv76ayUmJmr48OEKCAjQyJEjtWfPHq1bt04TJ07UH//4R4WHhzu2MXz4cO3cuVPPP/+8hg4dKn9/f8e8xx9/XFu2bNGECRO0a9cuHTx4UB9//LEmTJhQZl0tW7ZUUlKSli1bpsOHD+v1118vNubUxIkTlZiYqHfffVcHDx7UzJkztXv37kJt+Mwzz2jWrFl6/fXX9dNPP+mHH37QwoULXXqDOpeHUl988YVefPFFRUVFFZresmXLYskdAAAAAABAWYYMGaIVK1aocePGhaZHRUVpxYoVGjJkiMv2PW3aND366KOaPn262rZtq2HDhun06dMKCgrS559/rnPnzqlbt24aOnSo+vbtW2hgcSlvMPHY2Fjt3r27WI+k66+/Xhs2bNBPP/2kHj16qFOnTpo+fboiIyPLrOmOO+7Q5MmTNWHCBHXs2FFbtmzRtGnTCi0zfPhwTZ06VY899pg6d+6so0eP6oEHHig0QPmYMWP0zjvvaOHChbruuuvUq1cvLVq0qNAd+ozm8rvv1a1bVzt37lTLli1Vt25dff/992revLm2b9+ufv366ZdffnHl7quMu+8BAAAAAGCMsu7YVlFWq1WbNm3SqVOn1KhRI/Xo0cOl4x/VNL/73e8UERGhf/3rX5Va3yPuvtejRw+99957eu655yTldaez2Wx66aWX1KdPH1fvHgAAAAAA1EDe3t7q3bu3u8vwCJcuXdL8+fPVr18/eXt7a+nSpfrqq6/05ZdfurUul4dSL730kvr27avt27crOztbf/3rX/Xjjz/q3Llz+t///ufq3QMAAAAAANRqFotFq1ev1vPPP68rV66odevW+vDDDxUfH+/WulweSrVv314//fST5s6dq7p16+rixYsaMmSIHnroITVq1MjVuwcAAAAAAKjVAgMD9dVXX7m7jGJcHkpJUmhoaKFbEwIAAAAAAKB2c/nd91q0aKGnn35aBw8edPWuAAAAAAAA4CFcHko99NBD+uyzz9S6dWt169ZNc+bMUUpKiqt3CwAAAAAAqimbzebuElBFRvwbWux2u92AWsr1008/afHixVq6dKmOHj2qPn366P7779eIESPM2H2lOXsbQwAAAAAAUDabzaaDBw/K29tbDRo0kJ+fnywWi7vLQgXY7XZlZ2frzJkzslqtatmypby8Cvd5cjZLMS2UKujrr7/W+PHjtXv3blmtVrN3XyGEUgAAAAAAGCc7O1unTp3SpUuX3F0KqiAoKEiNGjWSn59fsXnOZimmDHSe79tvv9WSJUu0fPlypaen65577jFz9wAAAAAAwM38/PzUpEkT5ebmVvuOKiiZt7e3fHx8qtzLzeWhVNHL9m655Ra9+OKLGjJkiOrUqVPh7c2bN08vv/yyUlJS1KFDB73xxhuKjY0td71ly5bp3nvv1Z133qmPPvqoEu8EAAAA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vKjly5dr+/btSklJ0aJFi/TEE08oNDRUoaGhhZatV6+eIiIiStyOn5+fgoKCSp1f0LJlyzR+/HjH6yNHjig0NFTDhg2TJPXp00f79u3T7bffrqVLl8rX17fEQEqSBg0apCeffJJQCgAAuASX7wEAALjI+++/rzZt2qh169a6//77tWDBArmyk/q5c+e0d+9ede3a1TGtZcuWunTpkr777judO3dO27Zt0/XXX6/z589r2rRpmjt3bqnbi42N1c8//1zqpYIAAABVQSgFAADgIomJibr//vslSf3791daWpo2bNjgsv0lJSXJbrcrMjLSMS0sLEzvvvuuRowYodjYWI0YMUL9+vXTY489pgkTJujo0aPq1KmT2rdvrxUrVhTaXv52jh8/7rKaAQBA7cXlewAAAC5w4MABffvtt1q1apUkycfHR8OGDVNiYqJ69+7tkn3mj1MVEBBQaPpdd92lu+66y/F6w4YN2r17t9544w21aNFCS5cuVUREhGJjY9WzZ081bNhQkhQYGChJunTpkkvqBQAAtRuhFAAAgAskJiYqNze3UK8lu90uf39/zZ07t9iYUkaoX7++JOn8+fNq0KBBictkZWXpz3/+s/71r3/p0KFDys3NVa9evSRJrVq10jfffKNBgwZJyrscUFKp2wIAAKgKLt8DAAAwWG5urt577z298sor2rVrl+Px/fffKzIyUkuXLnXJfq+55hqFhIRo7969pS4zc+ZM9e/fX507d5bValVubq5jXk5OjqxWq+P1nj175Ovrq2uvvdYl9QIAgNqNnlIAAAAG+/TTT3X+/HmNHj26WI+ou+++W4mJiRo3bpzh+/Xy8lJ8fLw2b96swYMHF5u/d+9eLV++XN99950kqU2bNvLy8lJiYqIiIiK0f/9+devWzbH8pk2b1KNHD8dlfAAAAEaipxQAAIDBEhMTFR8fX+Ilenfffbe2b9+u3bt3u2TfY8aM0bJly2Sz2QpNt9vtevDBB/Xqq68qODhYUt6YUYsWLdKzzz6r0aNHa+7cuWrcuLFjnWXLlmns2LEuqRMAAMBid+V9iQEAAGAqu92u7t27a/Lkybr33nsrvZ3//Oc/evTRR7V79275+NC5HgAAGI+eUgAAADWIxWLRW2+9VWisqMrIzMzUwoULCaQAAIDL0FMKAAAAAAAApqOnFAAAAAAAAExHKAUAAAAA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",
      "text/plain": [
       "<Figure size 1200x800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (top, middle, bottom) = plt.subplots(3, 1, figsize=(12, 8), sharex=True)\n",
    "\n",
    "fig.suptitle(f'CaliforniaProp99', fontsize=16)\n",
    "\n",
    "top.plot(pw['att'], pw['-'], \"-o\", color=\"red\", label='-')\n",
    "top.plot(pw['att'], pw['+'], \"-o\", color=\"green\", label='+')\n",
    "top.plot(pw['att'], pw['+/-'], \"-o\", color=\"black\", label='+/-', alpha=0.5)\n",
    "top.axhline(1.0, color=\"black\", alpha=0.15)\n",
    "top.axhline(0.9, color=\"black\", alpha=0.15, linestyle='--')\n",
    "top.axhline(0.0, color=\"black\", alpha=0.15)\n",
    "top.set_ylim(-0.05, 1.05)\n",
    "top.set_xlabel(\"ATT (%)\")\n",
    "top.set_ylabel(\"Statistical Power\")\n",
    "top.legend()\n",
    "\n",
    "middle.plot(coverage.index, coverage.values, \"-o\", color=\"black\", label=\"coverage\")\n",
    "middle.axhline(1.0, color=\"black\", alpha=0.15)\n",
    "middle.axhline(0.0, color=\"black\", alpha=0.15)\n",
    "middle.set_ylim(-0.05, 1.05)\n",
    "middle.set_xlabel(\"ATT (%)\")\n",
    "middle.set_ylabel(\"Coverage\")\n",
    "middle.legend()\n",
    "\n",
    "\n",
    "bottom.plot(error.index, np.zeros(len(error)), color='black', alpha=0.7)\n",
    "bottom.plot(error.index, error['mean'], '-o', color='red')\n",
    "bottom.errorbar(error.index, error['mean'], error['se'], color='red', alpha=0.5, barsabove=True)\n",
    "bottom.set_xlabel(\"ATT (%)\")\n",
    "bottom.set_ylabel(\"Error\")\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 55.48361,
   "end_time": "2023-12-08T20:52:16.408300",
   "environment_variables": {},
   "exception": null,
   "input_path": "/home/runner/work/azcausal/azcausal/docs/source/power.ipynb",
   "output_path": "/home/runner/work/azcausal/azcausal/docs/source/power.ipynb",
   "parameters": {},
   "start_time": "2023-12-08T20:51:20.924690",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}